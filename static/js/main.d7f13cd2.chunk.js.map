{"version":3,"sources":["images/game/карта.png","store/actions.js","store/reducers.js","store/stores.js","components/menu.js","components/map.js","index.js"],"names":["module","exports","__webpack_require__","p","actionsCode","CHANGE_SELECTED_BUTTON","ADD_PICTURE_IN_TD","REMOVE_PICTURE_IN_TD","actionsMap","REDUCE_HP","LOAD_MAP","ZOOM","actionsMap_Code","RUN_ROW","SELECT_ROW","ROTATE_TANK","ROTATE_TURRET","MOVE_TANK","MOVE_TANK_ROTATE_AND_FORWARD","LOAD","SET_CURR_ROW","START","STOP","NEXT_MOVE","FIRE","actionsTypes","changeSelectedButton","index","className","type","payload","addPictureInTD","indexRow","removePictureInTD","selectRow","reduceHP","i","j","loadMap","text","zoomIn","zoomOut","RotateTank","direction","RotateTurret","MoveTankForward","MoveTankBackward","MoveTankRotateLeftAndForward","MoveTankRotateRightAndForward","Load","SetCurrRow","Start","Stop","NextMove","Restart","Fire","codeReducer","state","arguments","length","undefined","initialState_Code","action","_action$payload","Object","objectSpread","gunnerSelectedIndex","driverSelectedIndex","chargerSelectedIndex","rows","slice","_action$payload2","gunner","getGameButtonImage","driver","charger","push","toConsumableArray","_action$payload3","pop","selectedRow","putStateToProps_Code","codeState","currentRow","putActionsToProps_Code","dispatch","bindActionCreators","mapReducer","initialState_Map","mapArr","map","_action$payload4","tag","tileNames","_3hp","getmapTile","_2hp","_1hp","empty","initialMap","xmlDoc","window","DOMParser","parseFromString","ActiveXObject","async","loadXML","world","getElementsByTagName","width","Number","getAttribute","height","shellDistance","tankEl","turretstatus","innerHTML","tank","X","Y","TankDirection","getAngleByDirection","TurretDirection","TurretStatus","units","children","row","c","XShift","YShift","tile","tagName","swamp","mountains","littleMountains","littleSwamp","mapWidth","mapHeight","e","alert","tileSize","map_codeReducer","initialState","newAngle","transformAngle","mapState","newAngleBody","newAngleTurret","nextPoint","getDirectionByAngle","gameButtons","North","NorthEast","East","SouthEast","South","SouthWest","West","NorthWest","status","isPlay","console","log","concat","tankBody","tankHead","little","store","tS","getState","obj","backgroundImage","backgroundPosition","positionArr","split","Math","floor","backgroundSize","border","gunnerBtnsCount","driverBtnsCount","MoveForward","MoveBackward","TurnLeftAndMoveForward","TurnRightAndMoveForward","TurnLeftAndMoveBackward","TurnRightAndMoveBackward","NotLoaded","PartiallyLoaded","Ready","left","angle","createStore","error","Menu","react_default","a","createElement","es","WrappedMenuButtons","menu_MenuGame","Component","MenuButtons","_state$mapState","currRowIndex","currRow","this","props","rotateTurret","fire","rotateTank","moveTankForward","moveTankBackward","_this$props$tank","msg","moveTankRotateLeftAndForward","moveTankRotateRightAndForward","_this$props$tank2","load","_this","setTimeout","nextMove","stop","menu_SpeedRange","id","MenuButton","image","OnClick","start","style","textAlign","menu_InfoButton","menu_TankInfo","onClick","src","alt","connect","setCurrRow","restart","InfoButton","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isOpen","_this3","setState","lib_default","onRequestClose","Info","TankInfo","SpeedRange","MenuGame","WrappedGameTable","WrappedGameButtonsTable","GameTable","_this4","arr","_loop","menu_GameTableRow","selected","value","OnRowClick","o","onClickTD_LMB","onClickTD_RMB","renderRows","GameTableRow","_this5","GameTableCell","onContextMenu","preventDefault","GameButtonsTable","_this$props","_loop2","GameButton","key","class","_loop3","_loop4","renderButtons","Map","WrappedMapTable","MapTable","elements","combinedTile","k","MapTile","combinedDiv","combinedRow","t","position","loadTank","valueBody","zIndex","top","transform","valueHead","evt","files","target","reader","FileReader","onload","result","readAsText","positon","onChange","event","fileLoad","renderTable","onClickCapture","Game","components_map","menu","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.d7f13cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/карта.a649f862.png\";","import {initialState_Map, tileNames} from './stores'\r\nimport {getAngleByDirection} from './stores'\r\n\r\nexport const actionsCode={\r\n    CHANGE_SELECTED_BUTTON: \"CHANGE_SELECTED_BUTTON\",\r\n    ADD_PICTURE_IN_TD: \"ADD_PICTURE_IN_TD\",\r\n    REMOVE_PICTURE_IN_TD: \"REMOVE_PICTURE_IN_TD\",\r\n\r\n};\r\nexport const actionsMap={\r\n    REDUCE_HP: \"REDUCE_HP\",\r\n    LOAD_MAP: \"LOAD_MAP\",\r\n    ZOOM: \"ZOOM\",\r\n};\r\nexport const actionsMap_Code={\r\n    RUN_ROW: \"RUN_ROW\",\r\n    SELECT_ROW: \"SELECT_ROW\",\r\n    ROTATE_TANK: \"ROTATE_TANK\",\r\n    ROTATE_TURRET: \"ROTATE_TURRET\",\r\n    MOVE_TANK: \"MOVE_TANK\",\r\n    MOVE_TANK_ROTATE_AND_FORWARD: \"MOVE_TANK_ROTATE_AND_FORWARD\",\r\n    LOAD: \"LOAD\",\r\n    SET_CURR_ROW: \"SET_CURR_ROW\",\r\n    START: \"START\",\r\n    STOP: \"STOP\",\r\n    NEXT_MOVE: \"NEXT_MOVE\",\r\n    FIRE: \"FIRE\",\r\n};\r\nexport const actionsTypes ={\r\n    MAP: actionsMap,\r\n    CODE: actionsCode,\r\n    MAP_CODE: actionsMap_Code\r\n};\r\n\r\n\r\n//----------------------------------------------\r\n\r\nexport const changeSelectedButton = (index, className) =>{\r\n    return{\r\n        type: actionsCode.CHANGE_SELECTED_BUTTON,\r\n        payload: {\r\n            index: index,\r\n            className: className\r\n        }\r\n    }\r\n};\r\nexport const addPictureInTD = (className , indexRow) => {\r\n    return{\r\n        type: actionsCode.ADD_PICTURE_IN_TD,\r\n        payload: {\r\n            className: className,\r\n            indexRow: indexRow\r\n        }\r\n    };\r\n};\r\nexport const removePictureInTD = (className , indexRow) => {\r\n    return{\r\n        type: actionsCode.REMOVE_PICTURE_IN_TD,\r\n        payload: {\r\n            className: className,\r\n            indexRow: indexRow\r\n        }\r\n    };\r\n};\r\nexport const selectRow = (index) => {\r\n    return{\r\n        type: actionsMap_Code.SELECT_ROW,\r\n        payload: index\r\n    };\r\n};\r\n\r\n//-------------------------------------------------\r\n\r\nexport const reduceHP = (i, j) => {\r\n    return {\r\n        type: actionsMap.REDUCE_HP,\r\n        payload: {\r\n            i:i,\r\n            j:j\r\n        }\r\n    }\r\n};\r\nexport const loadMap = (text) => {\r\n    return {\r\n        type: actionsMap.LOAD_MAP,\r\n        payload: text\r\n    }\r\n};\r\nexport const zoomIn = () =>{\r\n    return {\r\n        type: actionsMap.ZOOM,\r\n        payload: 20\r\n    }\r\n};\r\nexport const zoomOut = () =>{\r\n    return {\r\n        type: actionsMap.ZOOM,\r\n        payload: -20\r\n    }\r\n};\r\n\r\n//----------------------------------------------\r\n\r\nexport const runRow = (index) =>{\r\n    return {\r\n        type: actionsMap_Code.RUN_ROW,\r\n        payload: index\r\n    }\r\n};\r\n\r\nexport const RotateTank = (direction) => {\r\n    return {\r\n        type: actionsMap_Code.ROTATE_TANK,\r\n        payload: direction\r\n    }\r\n};\r\nexport const RotateTurret = (direction) => {\r\n    return {\r\n        type: actionsMap_Code.ROTATE_TURRET,\r\n        payload: direction\r\n    }\r\n};\r\nexport const MoveTankForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK,\r\n        payload: true\r\n    }\r\n};\r\nexport const MoveTankBackward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK,\r\n        payload: false\r\n    }\r\n};\r\nexport const MoveTankRotateLeftAndForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD,\r\n        payload: true\r\n    }\r\n};\r\nexport const MoveTankRotateRightAndForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD,\r\n        payload: false\r\n    }\r\n};\r\nexport const Load = () => {\r\n    return {\r\n        type: actionsMap_Code.LOAD,\r\n    }\r\n};\r\nexport const SetCurrRow = (index) => {\r\n    return {\r\n        type: actionsMap_Code.SET_CURR_ROW,\r\n        payload: index\r\n    }\r\n};\r\nexport const Start = () => {\r\n    return {\r\n        type: actionsMap_Code.START,\r\n    }\r\n};\r\nexport const Stop = () => {\r\n    return {\r\n        type: actionsMap_Code.STOP,\r\n    }\r\n};\r\nexport const NextMove = () => {\r\n    return {\r\n        type: actionsMap_Code.NEXT_MOVE,\r\n    }\r\n};\r\nexport const Restart = () => {\r\n    return {\r\n        type: actionsMap.LOAD_MAP,\r\n        payload: \"\"\r\n    }\r\n};\r\nexport const Fire = () => {\r\n    return {\r\n        type: actionsMap_Code.FIRE,\r\n    }\r\n};\r\n\r\n","import {bindActionCreators} from 'redux'\r\nimport {getGameButtonImage,\r\n        tileNames,getmapTile,\r\n        initialState, initialState_Map, initialState_Code} from \"./stores.js\";\r\nimport {actionsTypes, actionsCode, actionsMap_Code, actionsMap ,\r\n        reduceHP, loadMap, zoomIn , zoomOut,\r\n        RotateTank, RotateTurret,Load, SetCurrRow, Start, Stop, NextMove, Restart, Fire,\r\n        MoveTankForward, MoveTankBackward, MoveTankRotateLeftAndForward,\r\n        MoveTankRotateRightAndForward,\r\n        addPictureInTD, changeSelectedButton, removePictureInTD, selectRow,} from \"./actions.js\";\r\nimport {gameButtons, getAngleByDirection, getDirectionByAngle, transformAngle} from \"./stores\";\r\n\r\n\r\nexport const rootReducer = (state = initialState, action) =>{\r\n    if (actionsTypes.MAP[`${action.type}`] +\"\" !== \"undefined\")\r\n        return {...state, mapState: mapReducer(state.mapState, action)};\r\n\r\n    if (actionsTypes.CODE[`${action.type}`]+\"\" !== \"undefined\")\r\n        return {...state, codeState: codeReducer(state.codeState, action)};\r\n\r\n    if (actionsTypes.MAP_CODE[`${action.type}`]+\"\" !== \"undefined\")\r\n        return map_codeReducer(state, action);\r\n    return state;\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nexport const codeReducer = (state = initialState_Code , action) => {\r\n    switch (action.type) {\r\n        case actionsCode.CHANGE_SELECTED_BUTTON:\r\n        {\r\n            const {index, className} = action.payload;\r\n\r\n            if (className === \"gunner\") {\r\n                return {\r\n                    ...state,\r\n                    gunnerSelectedIndex: index,\r\n                }\r\n            }\r\n            if (className === \"driver\") {\r\n                return {\r\n                    ...state,\r\n                    driverSelectedIndex: index,\r\n                }\r\n            }\r\n            if (className === \"charger\") {\r\n                return {\r\n                    ...state,\r\n                    chargerSelectedIndex: index,\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n        case actionsCode.ADD_PICTURE_IN_TD:\r\n        {\r\n            const rows = state.rows.slice();\r\n            const { indexRow, className } = action.payload;\r\n\r\n            rows[indexRow]={\r\n                gunner: className === \"gunner\" ? getGameButtonImage(\"gunner\", state.gunnerSelectedIndex ) : rows[indexRow].gunner,\r\n                driver: className === \"driver\" ? getGameButtonImage(\"driver\", state.driverSelectedIndex ) : rows[indexRow].driver,\r\n                charger: className === \"charger\" ? getGameButtonImage(\"charger\", state.chargerSelectedIndex ) : rows[indexRow].charger\r\n            };\r\n\r\n            while (\r\n                rows[rows.length-1].gunner != null ||\r\n                rows[rows.length-1].driver != null ||\r\n                rows[rows.length-1].charger != null)\r\n            {\r\n                rows.push(\r\n                    {\r\n                        gunner: null,\r\n                        driver: null,\r\n                        charger: null\r\n                    });\r\n            }\r\n\r\n\r\n            return {...state, rows: rows}\r\n        }\r\n        case actionsCode.REMOVE_PICTURE_IN_TD:\r\n        {\r\n            let rows = [...state.rows];\r\n            const { indexRow, className } = action.payload;\r\n\r\n            // console.log(state);\r\n            // console.log(rows.length);\r\n            // console.log(JSON.stringify(rows ));\r\n\r\n            rows[indexRow] = {\r\n                gunner: className === \"gunner\" ? null : rows[indexRow].gunner,\r\n                driver: className === \"driver\" ? null : rows[indexRow].driver,\r\n                charger: className === \"charger\" ? null : rows[indexRow].charger\r\n            };\r\n\r\n            // console.log(rows);\r\n\r\n            while (\r\n                rows.length > 0 &&\r\n                rows[rows.length-1].gunner == null &&\r\n                rows[rows.length-1].driver == null &&\r\n                rows[rows.length-1].charger == null)\r\n            {\r\n                rows.pop();\r\n            }\r\n            rows.push(\r\n                {\r\n                    gunner: null,\r\n                    driver: null,\r\n                    charger: null\r\n                });\r\n\r\n            return {...state, rows: rows}\r\n        }\r\n        case actionsCode.SELECT_ROW:\r\n        {\r\n            return {...state, selectedRow: action.payload.index}\r\n        }\r\n        case actionsCode.RUN_ROW:\r\n        {\r\n            return state;\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const putStateToProps_Code = (state) =>{\r\n\r\n    return {\r\n        gunnerSelectedIndex: state.codeState.gunnerSelectedIndex,\r\n        driverSelectedIndex: state.codeState.driverSelectedIndex,\r\n        chargerSelectedIndex: state.codeState.chargerSelectedIndex,\r\n        selectedRow: state.codeState.selectedRow,\r\n        currentRow: state.codeState.currentRow,\r\n        rows: state.codeState.rows\r\n    }\r\n};\r\nexport const putActionsToProps_Code = (dispatch) => {\r\n    return {\r\n        changeSelectedButton: bindActionCreators(changeSelectedButton, dispatch),\r\n        addPictureInTD: bindActionCreators(addPictureInTD, dispatch),\r\n        removePictureInTD: bindActionCreators(removePictureInTD, dispatch),\r\n        selectRow: bindActionCreators(selectRow, dispatch),\r\n    }\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nexport const mapReducer = (state = initialState_Map, action) => {\r\n    switch (action.type) {\r\n        case actionsMap.REDUCE_HP: {\r\n            let mapArr = state.map.slice();\r\n            let {i,j} = action.payload;\r\n            let img = mapArr[i][j];\r\n\r\n            switch (img.tag) {\r\n                case tileNames._3hp:\r\n                    mapArr[i][j] = getmapTile(tileNames._2hp);\r\n                    return {...state, map: mapArr};\r\n\r\n                case tileNames._2hp:\r\n                    mapArr[i][j] = getmapTile(tileNames._1hp);\r\n                    return {...state, map: mapArr};\r\n\r\n                case tileNames._1hp:\r\n                    mapArr[i][j] = getmapTile(tileNames.empty);\r\n                    return {...state, map: mapArr};\r\n            }\r\n            return state\r\n        }\r\n        case actionsMap.LOAD_MAP:{\r\n            const text = action.payload === \"\"? state.initialMap : action.payload;\r\n\r\n            let xmlDoc = null;\r\n\r\n            try {\r\n                if (window.DOMParser) {\r\n                    // code for modern browsers\r\n                    const parser = new DOMParser();\r\n                    xmlDoc = parser.parseFromString(text,\"text/xml\");\r\n                }\r\n                else {\r\n                    // code for old IE browsers\r\n                    // eslint-disable-next-line\r\n                    xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                    xmlDoc.async = false;\r\n                    xmlDoc.loadXML(text);\r\n                }\r\n\r\n                const world = xmlDoc.getElementsByTagName('World')[0];\r\n                const width = Number(world.getAttribute('Width'));\r\n                const height = Number(world.getAttribute('Height'));\r\n                const shellDistance = Number(world.getAttribute('ShellDistance'));\r\n\r\n                const tankEl = world.getElementsByTagName('Tank')[0];\r\n                let turretstatus = 0;\r\n                switch (tankEl.getElementsByTagName('TurretStatus')[0].innerHTML) {\r\n                    case \"PartiallyLoaded\":\r\n                        turretstatus = 1;\r\n                        break;\r\n                    case \"Ready\":\r\n                        turretstatus = 2;\r\n                        break;\r\n                }\r\n\r\n\r\n                const tank = {\r\n                    X: Number(tankEl.getAttribute('X')),\r\n                    Y: Number(tankEl.getAttribute('Y')),\r\n                    TankDirection: getAngleByDirection(tankEl.getElementsByTagName('TankDirection')[0].innerHTML),\r\n                    TurretDirection: getAngleByDirection(tankEl.getElementsByTagName('TurretDirection')[0].innerHTML),\r\n                    TurretStatus: turretstatus,\r\n                };\r\n                const units = world.getElementsByTagName('Units')[0].children;\r\n\r\n                let map = [];\r\n                for (let i = 0 ; i < height; i++){\r\n                    let row = [];\r\n                    for (let j = 0 ; j < width; j++) {\r\n                        row.push([]);\r\n                    }\r\n                    map.push(row)\r\n                }\r\n\r\n\r\n                for(let c = 0 ; c < units.length; c++){\r\n                    const X = Number(units[c].getAttribute('X'));\r\n                    const Y = Number(units[c].getAttribute('Y'));\r\n                    let XShift = units[c].getAttribute('XShift');\r\n                    if (XShift)\r\n                        XShift = Number(units[c].getAttribute('XShift'));\r\n                    let YShift = units[c].getAttribute('YShift');\r\n                    if (YShift)\r\n                        YShift = Number(units[c].getAttribute('YShift'));\r\n\r\n                    let tile = tileNames.empty;\r\n                    switch (units[c].tagName) {\r\n                        case \"Swamp\":{\r\n                            tile = (tileNames.swamp);\r\n                            break;\r\n                        }\r\n                        case \"Rock\":{\r\n                            tile = (tileNames.mountains);\r\n                            break;\r\n                        }\r\n                        case \"LittleRock\":{\r\n                            tile = (tileNames.littleMountains);\r\n                            break;\r\n                        }\r\n                        case \"LittleSwamp\":{\r\n                            tile = (tileNames.littleSwamp);\r\n                            break;\r\n                        }\r\n                        case \"LittlePillbox\":{\r\n                            tile = (tileNames._1hp);\r\n                            break;\r\n                        }\r\n                        case \"MediumPillbox\":{\r\n                            tile = (tileNames._2hp);\r\n                            break;\r\n                        }\r\n                        case \"BigPillbox\":{\r\n                            tile = (tileNames._3hp);\r\n                            break;\r\n                        }\r\n                    }\r\n                    map[Y][X].push({ XShift: XShift, YShift: YShift, tile: tile});\r\n                }\r\n                return {...state,\r\n                        shellDistance: shellDistance,\r\n                        tank: tank,\r\n                        mapWidth: width,\r\n                        mapHeight: height,\r\n                        map: map,\r\n                        initialMap: text,\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert('Ошибка файл карты неправильно сформирован');\r\n            }\r\n        }\r\n        case actionsMap.ZOOM:{\r\n            let {tileSize} = state;\r\n            tileSize += action.payload;\r\n            if (tileSize < 20)\r\n                {tileSize = 20;}\r\n            if (tileSize > 80)\r\n                {tileSize = 80;}\r\n            return {...state, tileSize: tileSize};\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const putStateToProps_Map = (state) =>{\r\n    return {\r\n        shellDistance: state.mapState.shellDistance,\r\n        tank: state.mapState.tank,\r\n        mapWidth: state.mapState.mapWidth,\r\n        mapHeight: state.mapState.mapHeight,\r\n        map: state.mapState.map,\r\n        tileSize: state.mapState.tileSize,\r\n    }\r\n};\r\nexport const putActionsToProps_Map = (dispatch) => {\r\n    return {\r\n        reduceHP: bindActionCreators(reduceHP, dispatch),\r\n        loadMap: bindActionCreators(loadMap, dispatch),\r\n        zoomIn: bindActionCreators(zoomIn, dispatch),\r\n        zoomOut: bindActionCreators(zoomOut, dispatch)\r\n    }\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nexport const map_codeReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case actionsMap_Code.SELECT_ROW:\r\n        {\r\n            return {...state, codeState:{...state.codeState, selectedRow: action.payload }}\r\n        }\r\n        case actionsMap_Code.RUN_ROW:\r\n        {\r\n            return state;\r\n        }\r\n        case actionsMap_Code.ROTATE_TURRET:\r\n        {\r\n            const newAngle = transformAngle(getAngleByDirection(action.payload)\r\n                                + state.mapState.tank.TurretDirection);\r\n            if (state.mapState.tank)\r\n                return {...state, mapState:{...state.mapState,\r\n                        tank: {...state.mapState.tank,\r\n                            TurretDirection: newAngle }}};\r\n        }\r\n        case actionsMap_Code.ROTATE_TANK:\r\n        {\r\n            const newAngleBody = transformAngle(getAngleByDirection(action.payload)\r\n                                    + state.mapState.tank.TankDirection);\r\n            const newAngleTurret = transformAngle(getAngleByDirection(action.payload)\r\n                                    + state.mapState.tank.TurretDirection);\r\n            if (state.mapState.tank)\r\n                return {...state, mapState:{...state.mapState,\r\n                        tank: {...state.mapState.tank,\r\n                            TankDirection: newAngleBody,\r\n                            TurretDirection: newAngleTurret}}};\r\n        }\r\n        case actionsMap_Code.MOVE_TANK:\r\n        {\r\n            const {tank} = state.mapState;\r\n\r\n            if (tank) {\r\n                let nextPoint =[0,0];\r\n                switch (getDirectionByAngle(tank.TankDirection)) {\r\n                    case gameButtons.driver.North:\r\n                        nextPoint = [0, -1];\r\n                        break;\r\n                    case gameButtons.driver.NorthEast:\r\n                        nextPoint = [1, -1];\r\n                        break;\r\n                    case gameButtons.driver.East:\r\n                        nextPoint = [1, 0];\r\n                        break;\r\n                    case gameButtons.driver.SouthEast:\r\n                        nextPoint = [1, 1];\r\n                        break;\r\n                    case gameButtons.driver.South:\r\n                        nextPoint = [0, 1];\r\n                        break;\r\n                    case gameButtons.driver.SouthWest:\r\n                        nextPoint = [-1, 1];\r\n                        break;\r\n                    case gameButtons.driver.West:\r\n                        nextPoint = [-1, 0];\r\n                        break;\r\n                    case gameButtons.driver.NorthWest:\r\n                        nextPoint = [-1, -1];\r\n                        break;\r\n                }\r\n\r\n                if (!action.payload) {\r\n                    nextPoint[0] = nextPoint[0] * -1;\r\n                    nextPoint[1] = nextPoint[1] * -1;\r\n                }\r\n\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            X: tank.X + nextPoint[0], Y: tank.Y + nextPoint[1]\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD:\r\n        {\r\n            const {tank} = state.mapState;\r\n\r\n            if (tank) {\r\n\r\n                const newAngleBody = transformAngle( tank.TankDirection + (action.payload? -45 : 45 ));\r\n                const newAngleTurret = transformAngle( tank.TurretDirection + (action.payload? -45 : 45 ));\r\n\r\n                let nextPoint =[0,0];\r\n                switch (getDirectionByAngle(newAngleBody)) {\r\n                    case gameButtons.driver.North:\r\n                        nextPoint = [0, -1];\r\n                        break;\r\n                    case gameButtons.driver.NorthEast:\r\n                        nextPoint = [1, -1];\r\n                        break;\r\n                    case gameButtons.driver.East:\r\n                        nextPoint = [1, 0];\r\n                        break;\r\n                    case gameButtons.driver.SouthEast:\r\n                        nextPoint = [1, 1];\r\n                        break;\r\n                    case gameButtons.driver.South:\r\n                        nextPoint = [0, 1];\r\n                        break;\r\n                    case gameButtons.driver.SouthWest:\r\n                        nextPoint = [-1, 1];\r\n                        break;\r\n                    case gameButtons.driver.West:\r\n                        nextPoint = [-1, 0];\r\n                        break;\r\n                    case gameButtons.driver.NorthWest:\r\n                        nextPoint = [-1, -1];\r\n                        break;\r\n                }\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            X: tank.X + nextPoint[0], Y: tank.Y +  nextPoint[1],\r\n                            TankDirection: newAngleBody, TurretDirection: newAngleTurret\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.LOAD:\r\n        {\r\n            if (state.mapState.tank) {\r\n                let status = state.mapState.tank.TurretStatus + 1;\r\n                if (status === 3){\r\n                    status = 0;\r\n                }\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            TurretStatus: status\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.SET_CURR_ROW:\r\n        {\r\n            return {\r\n                ...state, codeState: {\r\n                    ...state.codeState, selectedRow: action.payload\r\n                }\r\n            };\r\n        }\r\n        case actionsMap_Code.START:\r\n        {\r\n            return {\r\n                ...state, codeState: {\r\n                    ...state.codeState, isPlay: true,\r\n                }, mapState: { ...state.mapState, ...mapReducer(state.mapState, Restart()) }\r\n            };\r\n        }\r\n        case actionsMap_Code.STOP:\r\n        {\r\n            return {\r\n                ...state, codeState: {\r\n                    ...state.codeState, isPlay: false, currentRow: 0\r\n                }\r\n            };\r\n        }\r\n        case actionsMap_Code.NEXT_MOVE:\r\n        {\r\n            if (state.codeState.isPlay) {\r\n                const index = state.codeState.currentRow + 1;\r\n                return {\r\n                    ...state, codeState: {\r\n                        ...state.codeState, currentRow: index\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.FIRE:\r\n        {\r\n            if (state.mapState.tank) {\r\n                console.log(`FIRE from ${state.mapState.tank.X}-${state.mapState.tank.Y}`);\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState, tank: {\r\n                            ...state.mapState.tank,\r\n                            TurretStatus: 0\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const putStateToProps_AlgButtons = (state) =>{\r\n\r\n    return {\r\n        selectedRow: state.codeState.selectedRow,\r\n        currentRow: state.codeState.currentRow,\r\n        rows: state.codeState.rows,\r\n        shellDistance: state.mapState.shellDistance,\r\n        tank: state.mapState.tank,\r\n        mapWidth: state.mapState.width,\r\n        mapHeight: state.mapState.height,\r\n        map: state.mapState.map,\r\n        isPlay: state.codeState.isPlay,\r\n    }\r\n};\r\n\r\nexport const putActionsToProps_AlgButtons = (dispatch) => {\r\n    return {\r\n        rotateTurret: bindActionCreators(RotateTurret, dispatch),\r\n        rotateTank: bindActionCreators(RotateTank, dispatch),\r\n        moveTankForward: bindActionCreators(MoveTankForward, dispatch),\r\n        moveTankBackward: bindActionCreators(MoveTankBackward, dispatch),\r\n        moveTankRotateLeftAndForward: bindActionCreators(MoveTankRotateLeftAndForward, dispatch),\r\n        moveTankRotateRightAndForward: bindActionCreators(MoveTankRotateRightAndForward, dispatch),\r\n        load: bindActionCreators(Load, dispatch),\r\n        setCurrRow: bindActionCreators(SetCurrRow, dispatch),\r\n        start: bindActionCreators(Start, dispatch),\r\n        stop: bindActionCreators(Stop, dispatch),\r\n        nextMove: bindActionCreators(NextMove, dispatch),\r\n        restart: bindActionCreators(Restart, dispatch),\r\n        fire: bindActionCreators(Fire, dispatch),\r\n\r\n    }\r\n};\r\n","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers.js\"\r\n\r\nexport const tileNames = {\r\n    mountains: \"mountains\",\r\n    littleMountains: \"littleMountains\",\r\n    littleSwamp: \"littleSwamp\",\r\n    swamp: \"swamp\",\r\n    tankBody: \"tankBody\",\r\n    tankHead: \"tankHead\",\r\n    _3hp: \"3hp\",\r\n    _2hp: \"2hp\",\r\n    _1hp: \"1hp\",\r\n    empty: \"empty\"\r\n};\r\n\r\nexport const getmapTile = (type, little = false) =>{\r\n    if (store + \"\" === \"undefined\")\r\n        return {};\r\n    const tS = store.getState().mapState.tileSize; //tileSize\r\n    let obj = {};\r\n    switch (type) {\r\n        case tileNames.mountains:\r\n        case tileNames.littleMountains:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.swamp:\r\n        case tileNames.littleSwamp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 2}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.tankBody:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 3}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.tankHead:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 4}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._3hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `0px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._2hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._1hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 2}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        default:\r\n            obj = {\r\n                tag: \"empty\",\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: \"0px 0px\",\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n    }\r\n    if (little){\r\n        const positionArr = obj.backgroundPosition.split(' ');\r\n        const X = Number(positionArr[0].slice(0,positionArr[0].length-2)) / 3;\r\n        const Y = Number(positionArr[1].slice(0,positionArr[1].length-2)) / 3;\r\n\r\n        obj = { ...obj,\r\n            backgroundPosition: `${Math.floor(X)}px ${Math.floor(Y)}px`,\r\n            backgroundSize: `${tS * 5 / 3 + 2 }px ${tS * 5 / 3 + 2 }px`,\r\n            height: obj.height / 3, width: obj.width / 3 ,\r\n            border:\"none\", }\r\n    }\r\n    else{\r\n        obj = {...obj, backgroundSize: `${tS * 5}px ${tS * 5}px`,}\r\n    }\r\n\r\n\r\n    return obj;\r\n};\r\n\r\nexport const gunnerBtnsCount =8;\r\nexport const driverBtnsCount =11;\r\nexport const chargerBtnsCount =2;\r\n\r\nexport const gameButtons = {\r\n    gunner:{\r\n        North: \"North\",\r\n        East: \"East\",\r\n        South: \"South\",\r\n        West: \"West\",\r\n        NorthWest: \"NorthWest\",\r\n        NorthEast: \"NorthEast\",\r\n        SouthWest: \"SouthWest\",\r\n        SouthEast: \"SouthEast\",\r\n        Fire: \"Fire\"\r\n    },\r\n    driver:{\r\n        North: \"North\",\r\n        East: \"East\",\r\n        South: \"South\",\r\n        West: \"West\",\r\n        NorthWest: \"NorthWest\",\r\n        NorthEast: \"NorthEast\",\r\n        SouthWest: \"SouthWest\",\r\n        SouthEast: \"SouthEast\",\r\n        MoveForward: \"MoveForward\",\r\n        MoveBackward: \"MoveBackward\",\r\n        TurnLeftAndMoveForward: \"TurnLeftAndMoveForward\",\r\n        TurnRightAndMoveForward: \"TurnRigthAndMoveForward\",\r\n        TurnLeftAndMoveBackward: \"TurnLeftAndMoveBackward\",\r\n        TurnRightAndMoveBackward: \"TurnRigthAndMoveBackward\",\r\n    },\r\n    charger:{\r\n        NotLoaded: 0,\r\n        PartiallyLoaded: 1,\r\n        Ready:2,\r\n    }\r\n};\r\n\r\nexport function getGameButtonImage(className, index) {\r\n    return [\r\n        //-----------------Gunner----------------------\r\n        {\r\n            tag:gameButtons.gunner.NorthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.East,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.SouthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.NorthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.West,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.SouthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.South,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.Fire,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        //---------------Driver------------\r\n        {\r\n            tag:gameButtons.driver.NorthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.East,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.SouthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.NorthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.West,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.SouthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.South,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.MoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.MoveBackward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.TurnRightAndMoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.TurnLeftAndMoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        //-----------------Charger--------------\r\n        {\r\n            tag:gameButtons.charger.PartiallyLoaded,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.charger.Ready,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n    ][index + (className === \"driver\" ? gunnerBtnsCount : 0) + ( className === \"charger\" ? gunnerBtnsCount + driverBtnsCount : 0 )]\r\n}\r\n\r\nexport function getAngleByDirection(direction){\r\n    switch (direction) {\r\n        case \"North\":\r\n            return 0;\r\n        case \"East\":\r\n            return 90;\r\n        case \"South\":\r\n            return 180;\r\n        case \"West\":\r\n            return -90;\r\n        case \"NorthWest\":\r\n            return -45;\r\n        case \"NorthEast\":\r\n            return 45;\r\n        case \"SouthWest\":\r\n            return -135;\r\n        case \"SouthEast\":\r\n            return 135;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function transformAngle(angle) {\r\n    if (angle > 180 )\r\n        return angle - 360;\r\n\r\n    if (angle < -180 )\r\n        return angle + 360;\r\n\r\n    if (angle === 180 || angle === -180)\r\n        return 180;\r\n\r\n    return angle;\r\n}\r\n\r\nexport function getDirectionByAngle(angle){\r\n    angle = transformAngle(angle);\r\n\r\n    switch (angle) {\r\n        case 0:\r\n            return gameButtons.gunner.North;\r\n        case 90:\r\n            return gameButtons.gunner.East;\r\n        case 180:\r\n            return gameButtons.gunner.South;\r\n        case -90:\r\n            return gameButtons.gunner.West;\r\n        case -45:\r\n            return gameButtons.gunner.NorthWest;\r\n        case 45:\r\n            return gameButtons.gunner.NorthEast;\r\n        case -135:\r\n            return gameButtons.gunner.SouthWest;\r\n        case 135:\r\n            return gameButtons.gunner.SouthEast;\r\n    }\r\n    return \"undefined\";\r\n}\r\n\r\nexport const initialState_Code ={\r\n    gunnerSelectedIndex: 0,\r\n    driverSelectedIndex: 0,\r\n    chargerSelectedIndex: 0,\r\n    selectedRow: 0,\r\n    currentRow: 0,\r\n    rows: [{\r\n        gunner: null,\r\n        driver: null,\r\n        charger: null\r\n    }],\r\n    isPlay: false,\r\n};\r\n\r\nconst testMap=`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<World Height=\"10\" Width=\"10\" ShellDistance=\"8\">\r\n  <Tank X=\"4\" Y=\"4\">\r\n    <TankDirection>North</TankDirection>\r\n    <TurretDirection>North</TurretDirection>\r\n    <TurretStatus>NotLoaded</TurretStatus>\r\n  </Tank>\r\n  <Units>\r\n    <LittlePillbox X=\"4\" Y=\"2\" />\r\n    <BigPillbox X=\"7\" Y=\"1\" />\r\n    <Rock X=\"5\" Y=\"2\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"1\" />\r\n    <Swamp X=\"3\" Y=\"3\" />\r\n    <Swamp X=\"4\" Y=\"3\" />\r\n    <Swamp X=\"5\" Y=\"3\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"3\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"3\" XShift=\"0\" YShift=\"-1\" />\r\n  </Units>\r\n</World>`;\r\n\r\n\r\nexport const initialState_Map = {\r\n    tileSize:40,\r\n    initialMap: testMap,\r\n    map:[\r\n        [\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.mountains),\r\n            getmapTile(tileNames.mountains),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.tank)\r\n        ],\r\n        [\r\n            getmapTile(tileNames._1hp),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.mountains),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.empty)\r\n        ],\r\n        [\r\n            getmapTile(tileNames._3hp),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.swamp),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.empty)\r\n        ],\r\n        [\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.mountains),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.empty)\r\n        ],\r\n        [\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames.mountains),\r\n            getmapTile(tileNames.empty),\r\n            getmapTile(tileNames._2hp),\r\n            getmapTile(tileNames.empty)\r\n        ]\r\n    ]\r\n};\r\n\r\nexport const initialState = {\r\n    codeState: initialState_Code,\r\n    mapState: initialState_Map\r\n};\r\n\r\nexport const store = createStore(rootReducer, initialState);\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {store} from '../store/stores.js'\r\nimport {getGameButtonImage} from '../store/stores.js'\r\nimport {gunnerBtnsCount, driverBtnsCount, chargerBtnsCount, gameButtons,\r\n    getAngleByDirection, getDirectionByAngle, transformAngle} from '../store/stores.js'\r\nimport {putActionsToProps_Code, putStateToProps_Code} from \"../store/reducers.js\";\r\nimport {putStateToProps_AlgButtons, putActionsToProps_AlgButtons} from \"../store/reducers.js\";\r\nimport {tileNames} from \"../store/stores\";\r\n\r\nconst error = {\r\n    cannotChangeDirection: 'Невозможно изменить направление во время движения, необходимо остановить танк (сделать паузу)',\r\n    outOfBounds: 'Танк выехал за границу',\r\n    moveOnMountain: 'Танк не может проехать по горам',\r\n    moveOnSwamp: 'Танк не может проехать по лесам',\r\n    moveOnTarget: 'Танк не может проехать по мишеням',\r\n    moveOnSmth: 'Танк не может проехать по этой клетке',\r\n    cannotPartiallyLoad: 'Команду \"Заряжай 1\" можно выполнить только если орудие не заряжено',\r\n    cannotFullyLoad: 'Команду \"Заряжай 2\" можно выполнить только если уже выполнена команда \"Заряжай 1\"',\r\n};\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Provider store={store}>\r\n                    <WrappedMenuButtons />\r\n                </Provider>\r\n                <MenuGame />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MenuButtons extends Component {\r\n    handlePlay(){\r\n        ;\r\n    }\r\n\r\n    nextMove(indexRow){\r\n        const state = store.getState();\r\n        const {tank, map, mapWidth, mapHeight} = state.mapState;\r\n        const {rows} = state.codeState;\r\n        const currRowIndex = indexRow;\r\n\r\n        if (currRowIndex >= rows.length - 1)\r\n            return false;\r\n\r\n        const currRow = rows[currRowIndex];\r\n        const {gunner, driver,  charger} = currRow;\r\n\r\n        if (gunner !== null){\r\n            const tag = gunner.tag;\r\n            switch (tag) {\r\n                case gameButtons.gunner.North:\r\n                case gameButtons.gunner.NorthEast:\r\n                case gameButtons.gunner.East:\r\n                case gameButtons.gunner.SouthEast:\r\n                case gameButtons.gunner.South:\r\n                case gameButtons.gunner.SouthWest:\r\n                case gameButtons.gunner.West:\r\n                case gameButtons.gunner.NorthWest:{\r\n                    this.props.rotateTurret(tag);\r\n                    break;\r\n                }\r\n                case gameButtons.gunner.Fire:{\r\n                    /*TODO кнопка стрельбы*/\r\n                    this.props.fire();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (driver !== null){\r\n            const tag = driver.tag;\r\n            switch (tag) {\r\n                case gameButtons.driver.North:\r\n                case gameButtons.driver.NorthEast:\r\n                case gameButtons.driver.East:\r\n                case gameButtons.driver.SouthEast:\r\n                case gameButtons.driver.South:\r\n                case gameButtons.driver.SouthWest:\r\n                case gameButtons.driver.West:\r\n                case gameButtons.driver.NorthWest:{\r\n                    this.props.rotateTank(tag);\r\n                    break;\r\n                }\r\n\r\n                case gameButtons.driver.MoveForward:\r\n                case gameButtons.driver.MoveBackward:{\r\n                    if (currRowIndex > 0\r\n                        && rows[currRowIndex - 1].driver !== null\r\n                        && (\r\n                        (tag === gameButtons.driver.MoveForward\r\n                            && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveBackward)\r\n                            ||\r\n                        (tag === gameButtons.driver.MoveBackward\r\n                            && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveForward)\r\n                            )){\r\n                        alert(error.cannotChangeDirection + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (tag === gameButtons.driver.MoveForward)\r\n                        this.props.moveTankForward();\r\n                    else this.props.moveTankBackward();\r\n\r\n                    const {X,Y} = this.props.tank;\r\n\r\n                    if (X < 0 || X >= mapWidth\r\n                        || Y < 0 || Y >= mapHeight)\r\n                    {\r\n                        alert(error.outOfBounds + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (map[Y][X].length > 0){\r\n                        let msg = error.moveOnSmth;\r\n                        switch (map[Y][X][0].tile) {\r\n                            case tileNames.swamp:\r\n                                msg = error.moveOnSwamp;\r\n                                break;\r\n                            case tileNames.mountains:\r\n                                msg = error.moveOnMountain;\r\n                                break;\r\n                            case tileNames._3hp:\r\n                            case tileNames._2hp:\r\n                            case tileNames._1hp:\r\n                                msg = error.moveOnTarget;\r\n                                break;\r\n                        }\r\n                        alert(msg + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                case gameButtons.driver.TurnLeftAndMoveForward:\r\n                case gameButtons.driver.TurnRightAndMoveForward:\r\n                {\r\n                    if (currRowIndex > 0\r\n                        && rows[currRowIndex - 1].driver !== null\r\n                        && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveBackward)\r\n                    {\r\n                        alert(error.cannotChangeDirection + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (tag === gameButtons.driver.TurnLeftAndMoveForward)\r\n                        this.props.moveTankRotateLeftAndForward();\r\n                    else this.props.moveTankRotateRightAndForward();\r\n\r\n                    const {X,Y} = this.props.tank;\r\n\r\n                    if (X < 0 || X >= mapWidth\r\n                        || Y < 0 || Y >= mapHeight)\r\n                    {\r\n                        alert(error.outOfBounds + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (map[Y][X].length > 0){\r\n                        let msg = error.moveOnSmth;\r\n                        switch (map[Y][X][0].tile) {\r\n                            case tileNames.swamp:\r\n                                msg = error.moveOnSwamp;\r\n                                break;\r\n                            case tileNames.mountains:\r\n                                msg = error.moveOnMountain;\r\n                                break;\r\n                            case tileNames._3hp:\r\n                            case tileNames._2hp:\r\n                            case tileNames._1hp:\r\n                                msg = error.moveOnTarget;\r\n                                break;\r\n                        }\r\n                        alert(msg + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (charger !== null){\r\n            switch (charger.tag) {\r\n                case gameButtons.charger.PartiallyLoaded:{\r\n                    if (tank.TurretStatus >= 1){\r\n                        alert(error.cannotPartiallyLoad + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                }\r\n                case gameButtons.charger.Ready:{\r\n                    if (tank.TurretStatus >= 2){\r\n                        alert(error.cannotFullyLoad + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n            }\r\n            this.props.load();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        setTimeout(()=> {\r\n            if (this.props.isPlay) {\r\n                if (this.nextMove(this.props.currentRow)) {\r\n                    this.props.nextMove();\r\n                } else\r\n                    this.props.stop();\r\n            }\r\n        },200);\r\n\r\n        return (\r\n            <div className=\"flex-row margin-5\">\r\n                <div className=\"flex-column flex-justify-start widthAll\">\r\n                    <div className=\"flex-column\">\r\n                        <span>Скорость воспроизведения</span>\r\n                        <div>\r\n                            {/*<input type=\"range\" id=\"speedInput\"*/}\r\n                                   {/*onInput=\"document.getElementById('speedVal').innerText = document.getElementById('speedInput').value\" />*/}\r\n                            {/*<span id=\"speedVal\">50</span>*/}\r\n                        </div>\r\n                        <SpeedRange />\r\n                    </div>\r\n                    <div id=\"moveBtnDiv\" className=\"flex-row\">\r\n                        <div className=\"flex-row\">\r\n                            <MenuButton image=\"images/menu/startbtn.svg\" OnClick={() => this.props.start()} />\r\n                            <MenuButton image=\"images/menu/pausebtn.svg\" OnClick={() =>alert('2')} />\r\n                            <MenuButton image=\"images/menu/stopbtn.svg\" OnClick={() =>alert('3')} />\r\n                            <MenuButton image=\"images/menu/skipbtn.svg\" OnClick={() =>alert('4')} />\r\n                            <MenuButton image=\"images/menu/nextstepbtn.svg\" OnClick={() =>alert('5')} />\r\n                        </div>\r\n                        <div style={{width: 50}}> </div>\r\n                        <div className=\"flex-row\">\r\n                            <MenuButton image=\"images/menu/savebtn.svg\" OnClick={() => alert('6')} />\r\n                            <MenuButton image=\"images/menu/loadbtn.svg\" OnClick={() => alert('7')} />\r\n                        </div>\r\n                        <MenuButton image=\"\" OnClick={() => alert('8')} />\r\n                    </div>\r\n                    <div style={{textAlign: 'right'}} >\r\n                        <span>Дальность стрельбы: </span>\r\n                        <span>10</span>\r\n                    </div>\r\n                    <div id=\"saveBtnDiv\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column flex-justify-evenly\">\r\n                    <InfoButton />\r\n                    <TankInfo />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MenuButton(props) {\r\n    return (\r\n        <button\r\n            onClick={() => props.OnClick()}\r\n        >\r\n            <img src={props.image} alt=\"\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst WrappedMenuButtons = connect(putStateToProps_AlgButtons, putActionsToProps_AlgButtons)(MenuButtons);\r\n\r\n// =============================================\r\n\r\nclass InfoButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isOpen: false\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button id=\"infoButton\" className=\"flex-row\" onClick={() => this.setState({isOpen: true})}>\r\n                    <span>INFO</span>\r\n                    <img src=\"../images/menu/infobtn.svg\" alt=\"\"/>\r\n                </button>\r\n                <ReactModal isOpen={this.state.isOpen} onRequestClose={() => this.setState({isOpen: false})} >\r\n                    <Info onClick={() => this.setState({isOpen: false})} />\r\n                </ReactModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction Info(props){\r\n    return(\r\n        <div>\r\n            <button onClick={() => props.OnClick}>Закрыть</button>\r\n            /*TODO информацию*/\r\n        </div>\r\n    )\r\n}\r\n\r\nclass TankInfo extends Component {\r\n    render()\r\n    {\r\n        return (\r\n            <div id=\"tankDiv\">\r\n                <img src=\"../images/game/tank.png\" alt=\"\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SpeedRange extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                /*TODO скролл скорости*/\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nclass MenuGame extends Component {\r\n    render() {\r\n        return (\r\n            <div  className=\"flex-row flex-align-start \">\r\n                <div id=\"commandsDiv\" className=\"overflow overflow-y-visible margin-10\">\r\n                    <Provider store={store}>\r\n                        <WrappedGameTable />\r\n                    </Provider>\r\n                </div>\r\n                <div >\r\n                    <Provider store={store}>\r\n                        <WrappedGameButtonsTable />\r\n                    </Provider>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass GameTable extends Component{\r\n    renderRows(){\r\n        let arr=[];\r\n        const {rows} = this.props;\r\n        for(let i = 0; i < rows.length; i++){\r\n            arr.push(\r\n                <GameTableRow\r\n                    selected ={this.props.selectedRow == i}\r\n                    index={i}\r\n                    value={rows[i]}\r\n                    OnRowClick={(o)=>this.props.selectRow(o)}\r\n                    onClickTD_LMB={(className) => this.props.addPictureInTD(className, i)}\r\n                    onClickTD_RMB={(className) => this.props.removePictureInTD(className, i)}\r\n                />\r\n            )\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"commands\">\r\n                <tbody>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Наводчик</th>\r\n                    <th>Водитель</th>\r\n                    <th>Заряжающий</th>\r\n                </tr>\r\n                {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedGameTable = connect(putStateToProps_Code, putActionsToProps_Code)(GameTable);\r\n\r\nclass GameTableRow extends Component{\r\n    render() {\r\n        return (\r\n            <tr className={this.props.selected ? \"selectedRow\": \"\"} onClick={()=>this.props.OnRowClick(this.props.index)}>\r\n                <td style={{width: 20}} >{this.props.index+1}</td>\r\n                <GameTableCell\r\n                    value={this.props.value.gunner}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"gunner\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"gunner\")}\r\n                />\r\n                <GameTableCell\r\n                    value={this.props.value.driver}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"driver\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"driver\")}\r\n                />\r\n                <GameTableCell\r\n                    value={this.props.value.charger}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"charger\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"charger\")}\r\n                />\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction GameTableCell(props) {\r\n    return (\r\n        <td className=\"gameTD\" onClick={() => props.onClickTD_LMB()} onContextMenu={(e) => {e.preventDefault(); props.onClickTD_RMB()} }>\r\n            <div className=\"flex-column flex-justify-center\">\r\n                <div style={props.value} />\r\n            </div>\r\n        </td>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\nclass GameButtonsTable extends Component{\r\n    renderButtons(className) {\r\n        let arr = [];\r\n        const {gunnerSelectedIndex,driverSelectedIndex,chargerSelectedIndex,\r\n                changeSelectedButton} = this.props;\r\n        switch (className) {\r\n            case \"gunner\": {\r\n                for (let i = 0; i < gunnerBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={gunnerSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n            case \"driver\":{\r\n                for (let i = 0; i < driverBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={driverSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n            case \"charger\":{\r\n                for (let i = 0; i < chargerBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={chargerSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex-row flex-align-start overflow\">\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20}} className=\"padding-5\">Наводчик</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"gunner\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20}} className=\"padding-5\">Водитель</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"driver\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20, }} className=\"padding-5\">Заряжающий</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"charger\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedGameButtonsTable = connect(putStateToProps_Code, putActionsToProps_Code)(GameButtonsTable);\r\n\r\nfunction GameButton(props) {\r\n    return (\r\n        <button className={props.class + (props.selected? \" selected\":\"\") + \" margin-1\"}\r\n                style={getGameButtonImage(props.class, props.index)}\r\n                onClick={props.onClick}/>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React, {Component} from \"react\";\r\nimport { connect, Provider } from 'react-redux'\r\nimport {store} from '../store/stores.js'\r\nimport {putStateToProps_Map, putActionsToProps_Map} from '../store/reducers.js'\r\nimport '../styles/game.css';\r\nimport {tileNames,getmapTile} from \"../store/stores\";\r\n\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Provider store={store}>\r\n                    <WrappedMapTable />\r\n                </Provider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MapTable extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        props.loadMap(\"\");\r\n    }\r\n\r\n    renderTable(){\r\n        const tileSize = this.props.tileSize;\r\n        const {map, mapWidth, mapHeight, reduceHP} = this.props;\r\n        const elements = [];\r\n\r\n        for (let i = 0; i < mapHeight; i++){\r\n            const row =[];\r\n\r\n            for (let j = 0; j < mapWidth; j++){\r\n                if (map[i][j].length > 0\r\n                    && (map[i][j][0].tile === tileNames.littleMountains\r\n                    || map[i][j][0].tile === tileNames.littleSwamp)\r\n                    &&(map[i][j][0].XShift !== null && map[i][j][0].YShift !== null)){\r\n                    let combinedTile =[[null, null, null],[null, null, null],[null, null, null]];\r\n                    for (let k = 0; k < map[i][j].length; k++){\r\n\r\n                        combinedTile[map[i][j][k].YShift + 1][map[i][j][k].XShift + 1] =\r\n                            (<MapTile key={`tile ${i} - ${j}: ${map[i][j][k].YShift + 1} - ${map[i][j][k].XShift + 1}`}\r\n                                      value={getmapTile(map[i][j][k].tile, true)} />)\r\n                    }\r\n                    for (let k = 0; k < 9; k++){\r\n                        if (!combinedTile[Math.floor(k / 3)][k %3]){\r\n                            combinedTile[Math.floor(k / 3)][k % 3]\r\n                                = (<MapTile key={`tile ${i} - ${j}: ${Math.floor(k / 3)} - ${k %3}`}\r\n                                            value={getmapTile(tileNames.empty, true)} />);\r\n                        }\r\n                    }\r\n                    const combinedDiv=[];\r\n                    for (let k = 0; k < 3; k++){\r\n                        const combinedRow = [];\r\n                        for (let t = 0; t < 3; t++){\r\n                            combinedRow.push(combinedTile[k][t])\r\n                        }\r\n                        combinedDiv.push(\r\n                            <div className=\"flex-row\">\r\n                                {combinedRow}\r\n                            </div>);\r\n                    }\r\n                    row.push(\r\n                        <div key={`div ${i} - ${j}`} className=\"mapTile flex-column\" style={{height: tileSize, width: tileSize }}>\r\n                            {combinedDiv}\r\n                        </div>);\r\n                }\r\n                else\r\n                for (let k = 0; k < map[i][j].length; k++){\r\n                    /*let left = i * tileSize;\r\n                    let top = j * tileSize;\r\n\r\n                    const tile = {...map[i][j][k].tile,\r\n                        position: \"relative\",\r\n                        left: `${left}px`,\r\n                        top: `${top}px`};\r\n\r\n                    if (map[i][j][k].XShift + \"\" !== \"null\" && map[i][j][k].YShift + \"\" !== \"null\")\r\n                    {\r\n                        left = left + (tileSize / 3) * (map[i][j][k].XShift + 1);\r\n                        top = top + (tileSize / 3) * (map[i][j][k].YShift + 1 );\r\n                    }*/\r\n                    row.push(\r\n                        <MapTile key={`tile ${i} - ${j}`} value={getmapTile( map[i][j][k].tile)} />\r\n                    );\r\n                }\r\n                if (map[i][j].length  === 0){\r\n                   /* let left = i * tileSize;\r\n                    let top = j * tileSize;*/\r\n                    const tile = /*{...*/getmapTile(tileNames.empty)/*,\r\n                        left: `${left}px`,\r\n                        position: \"relative\",\r\n                        top: `${top}px`};*/\r\n                    row.push(\r\n                        <MapTile key={`tile ${i} - ${j}`} value={tile} />\r\n                    );\r\n                }\r\n            }\r\n            elements.push(\r\n                <div className=\"flex-row\">\r\n                    {row}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"flex-column flex-align-start\" style={{position: \"relative\"}} >\r\n                {this.loadTank()}\r\n                {elements}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadTank(){\r\n        const tileSize= this.props.tileSize;\r\n        const {tank} = this.props;\r\n        if (!tank) return null;\r\n        const valueBody = {...getmapTile(tileNames.tankBody),position: \"absolute\",\r\n            zIndex:9998,\r\n            left: tank.X * (tileSize + 2),\r\n            top: tank.Y * (tileSize + 2),\r\n            transform: `rotate(${tank.TankDirection}deg)`\r\n\r\n        };\r\n        const valueHead = {...getmapTile(tileNames.tankHead),position: \"absolute\",\r\n            zIndex:9999,\r\n            left: tank.X * (tileSize + 2),\r\n            top: tank.Y * (tileSize + 2),\r\n            transform: `rotate(${tank.TurretDirection}deg)`\r\n        };\r\n        return (\r\n            [<div style={valueBody}></div>,\r\n             <div style={valueHead}></div>\r\n            ])\r\n    }\r\n\r\n    fileLoad(evt){\r\n        var files = evt.target.files; // FileList object\r\n        var reader = new FileReader();\r\n        const {loadMap} = this.props;\r\n        reader.onload = function(e) {\r\n            loadMap(e.target.result)\r\n            //console.log(typeof e.target.result)\r\n        };\r\n        reader.readAsText(files[0].slice());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mapCont\" className=\"overflow-visible\" >\r\n                <div style={{positon:\"sticky\", top: 0}}>\r\n                    <div className=\"flex-row\">\r\n                        <input type=\"file\" onChange={(event => this.fileLoad(event))} />\r\n                        <button style={{width:20}} onClick={()=>this.props.zoomIn()}>+</button>\r\n                        <button style={{width:20}} onClick={()=>this.props.zoomOut()}>-</button>\r\n                        <div >{this.props.tileSize} </div>\r\n                    </div>\r\n                </div>\r\n                {this.renderTable()}\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MapTile(props) {\r\n    const value = {\r\n        backgroundImage: props.value.backgroundImage,\r\n        backgroundPosition:  props.value.backgroundPosition,\r\n        border: props.value.border,\r\n        height: props.value.height,\r\n        width: props.value.width,\r\n        backgroundSize: props.value.backgroundSize,\r\n    };\r\n    return(\r\n        <div className=\"mapTile\" style={value} onClickCapture={()=>props.onClick()}>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WrappedMapTable = connect(putStateToProps_Map, putActionsToProps_Map)(MapTable);\r\n\r\nexport default Map","import React, {Component} from 'react';\nimport Menu from './components/menu.js'\nimport Map from './components/map.js'\nimport ReactDOM from 'react-dom';\nimport './styles/game.css';\nimport './styles/scroll.css';\nimport './images/game/карта.png';\n\n\nclass Game extends Component {\n    render() {\n        return (\n            <div >\n                <div id=\"snavigator\">Танковый Экипаж</div>\n                <div id=\"gridMain\" >\n                    <Map />\n                    <Menu />\n                </div>\n            </div>\n        )\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}