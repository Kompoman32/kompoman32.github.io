{"version":3,"sources":["images/game/карта.png","store/actions.js","store/reducers.js","store/stores.js","components/menu.js","components/map.js","index.js"],"names":["module","exports","__webpack_require__","p","actionsCode","CHANGE_SELECTED_BUTTON","ADD_PICTURE_IN_TD","REMOVE_PICTURE_IN_TD","actionsMap","REDUCE_HP","LOAD_MAP","ZOOM","actionsMap_Code","RUN_ROW","SELECT_ROW","ROTATE_TANK","ROTATE_TURRET","MOVE_TANK","MOVE_TANK_ROTATE_AND_FORWARD","LOAD","START","STOP","NEXT_MOVE","FIRE","actionsTypes","changeSelectedButton","index","className","type","payload","addPictureInTD","indexRow","removePictureInTD","SelectRow","reduceHP","i","j","loadMap","text","zoomIn","zoomOut","RotateTank","direction","RotateTurret","MoveTankForward","MoveTankBackward","MoveTankRotateLeftAndForward","MoveTankRotateRightAndForward","Load","Start","Stop","NextMove","Restart","Fire","codeReducer","state","arguments","length","undefined","initialState_Code","action","_action$payload","Object","objectSpread","gunnerSelectedIndex","driverSelectedIndex","chargerSelectedIndex","rows","slice","_action$payload2","gunner","getGameButtonImage","driver","charger","push","toConsumableArray","_action$payload3","pop","putStateToProps_Code","codeState","selectedRow","currentRow","putActionsToProps_Code","dispatch","bindActionCreators","selectRow","mapReducer","initialState_Map","mapArr","map","_action$payload4","tile","tileNames","_3hp","_2hp","_1hp","targetCount","initialMap","xmlDoc","window","DOMParser","parseFromString","ActiveXObject","async","loadXML","world","getElementsByTagName","width","Number","getAttribute","height","shellDistance","tankEl","turretstatus","innerHTML","tank","X","Y","TankDirection","getAngleByDirection","TurretDirection","TurretStatus","units","children","row","c","XShift","YShift","empty","tagName","swamp","mountains","littleMountains","littleSwamp","mapWidth","mapHeight","mapTracers","e","alert","tileSize","getPointByDirection","nextPoint","angle","transformAngle","gameButtons","North","East","South","West","NorthWest","NorthEast","SouthWest","SouthEast","getDirectionByAngle","map_codeReducer","initialState","newAngle","mapState","newAngleBody","newAngleTurret","status","isPlay","concat","console","log","_state$mapState","newX","newY","point","tag","trailVert","trailDiag","inverted","offsetX","offsetY","k","obj","littleTrailVert","littleTrailDiag","tankBody","tankHead","getmapTile","anotherTileSize","little","store","tS","getState","backgroundImage","backgroundPosition","positionArr","split","Math","floor","backgroundSize","border","gunnerBtnsCount","driverBtnsCount","MoveForward","MoveBackward","TurnLeftAndMoveForward","TurnRightAndMoveForward","TurnLeftAndMoveBackward","TurnRightAndMoveBackward","NotLoaded","PartiallyLoaded","Ready","left","createStore","error","Menu","react_default","a","createElement","id","es","WrappedMenuButtons","menu_MenuGame","Component","MenuButtons","_this","this","props","nextMove","setTimeout","handlePlay","stop","_this$props","currRowIndex","currRow","rotateTurret","fire","rotateTank","moveTankForward","moveTankBackward","_this$props$tank","msg","moveTankRotateLeftAndForward","moveTankRotateRightAndForward","_this$props$tank2","load","_this2","menu_SpeedRange","MenuButton","image","OnClick","start","style","textAlign","menu_InfoButton","WrappedTankInfo","t","background","onClick","src","alt","connect","restart","InfoButton","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isOpen","setState","_this4","lib_default","onRequestClose","Info","handleClick","TankInfo","valueBody","position","zIndex","top","transform","valueHead","loadTank","SpeedRange","MenuGame","WrappedGameTable","WrappedGameButtonsTable","GameTable","_this5","arr","_loop","menu_GameTableRow","selected","current","value","OnRowClick","o","onClickTD_LMB","onClickTD_RMB","renderRows","GameTableRow","_this6","GameTableCell","onContextMenu","preventDefault","GameButtonsTable","_this$props2","_loop2","GameButton","key","class","_loop3","_loop4","renderButtons","Map","WrappedMapTable","MapTable","elements","combinedTile","MapTile","combinedDiv","combinedRow","loadTrails","evt","files","target","reader","FileReader","onload","result","readAsText","positon","onChange","event","fileLoad","renderTable","onClickCapture","Game","display","flexDirection","components_map","menu","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.5c924bf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/карта.a649f862.png\";","import {initialState_Map, tileNames} from './stores'\r\nimport {getAngleByDirection} from './stores'\r\n\r\nexport const actionsCode={\r\n    CHANGE_SELECTED_BUTTON: \"CHANGE_SELECTED_BUTTON\",\r\n    ADD_PICTURE_IN_TD: \"ADD_PICTURE_IN_TD\",\r\n    REMOVE_PICTURE_IN_TD: \"REMOVE_PICTURE_IN_TD\",\r\n\r\n};\r\nexport const actionsMap={\r\n    REDUCE_HP: \"REDUCE_HP\",\r\n    LOAD_MAP: \"LOAD_MAP\",\r\n    ZOOM: \"ZOOM\",\r\n};\r\nexport const actionsMap_Code={\r\n    RUN_ROW: \"RUN_ROW\",\r\n    SELECT_ROW: \"SELECT_ROW\",\r\n    ROTATE_TANK: \"ROTATE_TANK\",\r\n    ROTATE_TURRET: \"ROTATE_TURRET\",\r\n    MOVE_TANK: \"MOVE_TANK\",\r\n    MOVE_TANK_ROTATE_AND_FORWARD: \"MOVE_TANK_ROTATE_AND_FORWARD\",\r\n    LOAD: \"LOAD\",\r\n    START: \"START\",\r\n    STOP: \"STOP\",\r\n    NEXT_MOVE: \"NEXT_MOVE\",\r\n    FIRE: \"FIRE\",\r\n};\r\nexport const actionsTypes ={\r\n    MAP: actionsMap,\r\n    CODE: actionsCode,\r\n    MAP_CODE: actionsMap_Code\r\n};\r\n\r\n\r\n//----------------------------------------------\r\n\r\nexport const changeSelectedButton = (index, className) =>{\r\n    return{\r\n        type: actionsCode.CHANGE_SELECTED_BUTTON,\r\n        payload: {\r\n            index: index,\r\n            className: className\r\n        }\r\n    }\r\n};\r\nexport const addPictureInTD = (className , indexRow) => {\r\n    return{\r\n        type: actionsCode.ADD_PICTURE_IN_TD,\r\n        payload: {\r\n            className: className,\r\n            indexRow: indexRow\r\n        }\r\n    };\r\n};\r\nexport const removePictureInTD = (className , indexRow) => {\r\n    return{\r\n        type: actionsCode.REMOVE_PICTURE_IN_TD,\r\n        payload: {\r\n            className: className,\r\n            indexRow: indexRow\r\n        }\r\n    };\r\n};\r\nexport const SelectRow = (index) => {\r\n    return{\r\n        type: actionsMap_Code.SELECT_ROW,\r\n        payload: index\r\n    };\r\n};\r\n\r\n//-------------------------------------------------\r\n\r\nexport const reduceHP = (i, j) => {\r\n    return {\r\n        type: actionsMap.REDUCE_HP,\r\n        payload: {\r\n            i:i,\r\n            j:j\r\n        }\r\n    }\r\n};\r\nexport const loadMap = (text) => {\r\n    return {\r\n        type: actionsMap.LOAD_MAP,\r\n        payload: text\r\n    }\r\n};\r\nexport const zoomIn = () =>{\r\n    return {\r\n        type: actionsMap.ZOOM,\r\n        payload: 20\r\n    }\r\n};\r\nexport const zoomOut = () =>{\r\n    return {\r\n        type: actionsMap.ZOOM,\r\n        payload: -20\r\n    }\r\n};\r\n\r\n//----------------------------------------------\r\n\r\nexport const runRow = (index) =>{\r\n    return {\r\n        type: actionsMap_Code.RUN_ROW,\r\n        payload: index\r\n    }\r\n};\r\n\r\nexport const RotateTank = (direction) => {\r\n    return {\r\n        type: actionsMap_Code.ROTATE_TANK,\r\n        payload: direction\r\n    }\r\n};\r\nexport const RotateTurret = (direction) => {\r\n    return {\r\n        type: actionsMap_Code.ROTATE_TURRET,\r\n        payload: direction\r\n    }\r\n};\r\nexport const MoveTankForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK,\r\n        payload: true\r\n    }\r\n};\r\nexport const MoveTankBackward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK,\r\n        payload: false\r\n    }\r\n};\r\nexport const MoveTankRotateLeftAndForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD,\r\n        payload: true\r\n    }\r\n};\r\nexport const MoveTankRotateRightAndForward = () => {\r\n    return {\r\n        type: actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD,\r\n        payload: false\r\n    }\r\n};\r\nexport const Load = () => {\r\n    return {\r\n        type: actionsMap_Code.LOAD,\r\n    }\r\n};\r\nexport const Start = () => {\r\n    return {\r\n        type: actionsMap_Code.START,\r\n    }\r\n};\r\nexport const Stop = () => {\r\n    return {\r\n        type: actionsMap_Code.STOP,\r\n    }\r\n};\r\nexport const NextMove = () => {\r\n    return {\r\n        type: actionsMap_Code.NEXT_MOVE,\r\n    }\r\n};\r\nexport const Restart = () => {\r\n    return {\r\n        type: actionsMap.LOAD_MAP,\r\n        payload: \"\"\r\n    }\r\n};\r\nexport const Fire = () => {\r\n    return {\r\n        type: actionsMap_Code.FIRE,\r\n    }\r\n};\r\n\r\n","import {bindActionCreators} from 'redux'\r\nimport {getGameButtonImage,\r\n        tileNames,getmapTile,\r\n        initialState, initialState_Map, initialState_Code} from \"./stores.js\";\r\nimport {actionsTypes, actionsCode, actionsMap_Code, actionsMap ,\r\n        reduceHP, loadMap, zoomIn , zoomOut,\r\n        RotateTank, RotateTurret,Load, Start, Stop, NextMove, Restart, Fire,\r\n        MoveTankForward, MoveTankBackward, MoveTankRotateLeftAndForward,\r\n        MoveTankRotateRightAndForward,\r\n        addPictureInTD, changeSelectedButton, removePictureInTD, SelectRow,} from \"./actions.js\";\r\nimport {gameButtons, getAngleByDirection, getDirectionByAngle, transformAngle} from \"./stores\";\r\n\r\n\r\nexport const rootReducer = (state = initialState, action) =>{\r\n    if (actionsTypes.MAP[`${action.type}`] +\"\" !== \"undefined\")\r\n        return {...state, mapState: mapReducer(state.mapState, action)};\r\n\r\n    if (actionsTypes.CODE[`${action.type}`]+\"\" !== \"undefined\")\r\n        return {...state, codeState: codeReducer(state.codeState, action)};\r\n\r\n    if (actionsTypes.MAP_CODE[`${action.type}`]+\"\" !== \"undefined\")\r\n        return map_codeReducer(state, action);\r\n    return state;\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nexport const codeReducer = (state = initialState_Code , action) => {\r\n    switch (action.type) {\r\n        case actionsCode.CHANGE_SELECTED_BUTTON:\r\n        {\r\n            const {index, className} = action.payload;\r\n\r\n            if (className === \"gunner\") {\r\n                return {\r\n                    ...state,\r\n                    gunnerSelectedIndex: index,\r\n                }\r\n            }\r\n            if (className === \"driver\") {\r\n                return {\r\n                    ...state,\r\n                    driverSelectedIndex: index,\r\n                }\r\n            }\r\n            if (className === \"charger\") {\r\n                return {\r\n                    ...state,\r\n                    chargerSelectedIndex: index,\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n        case actionsCode.ADD_PICTURE_IN_TD:\r\n        {\r\n            const rows = state.rows.slice();\r\n            const { indexRow, className } = action.payload;\r\n\r\n            rows[indexRow]={\r\n                gunner: className === \"gunner\" ? getGameButtonImage(\"gunner\", state.gunnerSelectedIndex ) : rows[indexRow].gunner,\r\n                driver: className === \"driver\" ? getGameButtonImage(\"driver\", state.driverSelectedIndex ) : rows[indexRow].driver,\r\n                charger: className === \"charger\" ? getGameButtonImage(\"charger\", state.chargerSelectedIndex ) : rows[indexRow].charger\r\n            };\r\n\r\n            while (\r\n                rows[rows.length-1].gunner != null ||\r\n                rows[rows.length-1].driver != null ||\r\n                rows[rows.length-1].charger != null)\r\n            {\r\n                rows.push(\r\n                    {\r\n                        gunner: null,\r\n                        driver: null,\r\n                        charger: null\r\n                    });\r\n            }\r\n\r\n\r\n            return {...state, rows: rows}\r\n        }\r\n        case actionsCode.REMOVE_PICTURE_IN_TD:\r\n        {\r\n            let rows = [...state.rows];\r\n            const { indexRow, className } = action.payload;\r\n\r\n            // console.log(state);\r\n            // console.log(rows.length);\r\n            // console.log(JSON.stringify(rows ));\r\n\r\n            rows[indexRow] = {\r\n                gunner: className === \"gunner\" ? null : rows[indexRow].gunner,\r\n                driver: className === \"driver\" ? null : rows[indexRow].driver,\r\n                charger: className === \"charger\" ? null : rows[indexRow].charger\r\n            };\r\n\r\n            // console.log(rows);\r\n\r\n            while (\r\n                rows.length > 0 &&\r\n                rows[rows.length-1].gunner == null &&\r\n                rows[rows.length-1].driver == null &&\r\n                rows[rows.length-1].charger == null)\r\n            {\r\n                rows.pop();\r\n            }\r\n            rows.push(\r\n                {\r\n                    gunner: null,\r\n                    driver: null,\r\n                    charger: null\r\n                });\r\n\r\n            return {...state, rows: rows}\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const putStateToProps_Code = (state) =>{\r\n\r\n    return {\r\n        gunnerSelectedIndex: state.codeState.gunnerSelectedIndex,\r\n        driverSelectedIndex: state.codeState.driverSelectedIndex,\r\n        chargerSelectedIndex: state.codeState.chargerSelectedIndex,\r\n        selectedRow: state.codeState.selectedRow,\r\n        currentRow: state.codeState.currentRow,\r\n        rows: state.codeState.rows\r\n    }\r\n};\r\nexport const putActionsToProps_Code = (dispatch) => {\r\n    return {\r\n        changeSelectedButton: bindActionCreators(changeSelectedButton, dispatch),\r\n        addPictureInTD: bindActionCreators(addPictureInTD, dispatch),\r\n        removePictureInTD: bindActionCreators(removePictureInTD, dispatch),\r\n        selectRow: bindActionCreators(SelectRow, dispatch),\r\n    }\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nexport const mapReducer = (state = initialState_Map, action) => {\r\n    switch (action.type) {\r\n        case actionsMap.REDUCE_HP: {\r\n            let mapArr = state.map.slice();\r\n            let {i,j} = action.payload;\r\n            let img = mapArr[j][i][0];\r\n\r\n            switch (img.tile) {\r\n                case tileNames._3hp:\r\n                    mapArr[j][i][0] = {tile: tileNames._2hp };\r\n                    return {...state, map: mapArr};\r\n\r\n                case tileNames._2hp:\r\n                    mapArr[j][i][0] = {tile: tileNames._1hp };\r\n                    return {...state, map: mapArr};\r\n\r\n                case tileNames._1hp:\r\n                    mapArr[j][i] = [];\r\n                    return {...state, map: mapArr, targetCount: state.targetCount - 1 };\r\n            }\r\n            return state\r\n        }\r\n        case actionsMap.LOAD_MAP:{\r\n            const text = action.payload === \"\"? state.initialMap : action.payload;\r\n\r\n            let xmlDoc = null;\r\n\r\n            try {\r\n                if (window.DOMParser) {\r\n                    // code for modern browsers\r\n                    const parser = new DOMParser();\r\n                    xmlDoc = parser.parseFromString(text,\"text/xml\");\r\n                }\r\n                else {\r\n                    // code for old IE browsers\r\n                    // eslint-disable-next-line\r\n                    xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                    xmlDoc.async = false;\r\n                    xmlDoc.loadXML(text);\r\n                }\r\n\r\n                let targetCount = 0;\r\n\r\n                const world = xmlDoc.getElementsByTagName('World')[0];\r\n                const width = Number(world.getAttribute('Width'));\r\n                const height = Number(world.getAttribute('Height'));\r\n                const shellDistance = Number(world.getAttribute('ShellDistance'));\r\n\r\n                const tankEl = world.getElementsByTagName('Tank')[0];\r\n                let turretstatus = 0;\r\n                switch (tankEl.getElementsByTagName('TurretStatus')[0].innerHTML) {\r\n                    case \"PartiallyLoaded\":\r\n                        turretstatus = 1;\r\n                        break;\r\n                    case \"Ready\":\r\n                        turretstatus = 2;\r\n                        break;\r\n                }\r\n\r\n\r\n                const tank = {\r\n                    X: Number(tankEl.getAttribute('X')),\r\n                    Y: Number(tankEl.getAttribute('Y')),\r\n                    TankDirection: getAngleByDirection(tankEl.getElementsByTagName('TankDirection')[0].innerHTML),\r\n                    TurretDirection: getAngleByDirection(tankEl.getElementsByTagName('TurretDirection')[0].innerHTML),\r\n                    TurretStatus: turretstatus,\r\n                };\r\n                const units = world.getElementsByTagName('Units')[0].children;\r\n\r\n                let map = [];\r\n                for (let i = 0 ; i < height; i++){\r\n                    let row = [];\r\n                    for (let j = 0 ; j < width; j++) {\r\n                        row.push([]);\r\n                    }\r\n                    map.push(row)\r\n                }\r\n\r\n\r\n                for(let c = 0 ; c < units.length; c++){\r\n                    const X = Number(units[c].getAttribute('X'));\r\n                    const Y = Number(units[c].getAttribute('Y'));\r\n                    let XShift = units[c].getAttribute('XShift');\r\n                    if (XShift)\r\n                        XShift = Number(units[c].getAttribute('XShift'));\r\n                    let YShift = units[c].getAttribute('YShift');\r\n                    if (YShift)\r\n                        YShift = Number(units[c].getAttribute('YShift'));\r\n\r\n                    let tile = tileNames.empty;\r\n                    switch (units[c].tagName) {\r\n                        case \"Swamp\":{\r\n                            tile = (tileNames.swamp);\r\n                            break;\r\n                        }\r\n                        case \"Rock\":{\r\n                            tile = (tileNames.mountains);\r\n                            break;\r\n                        }\r\n                        case \"LittleRock\":{\r\n                            tile = (tileNames.littleMountains);\r\n                            break;\r\n                        }\r\n                        case \"LittleSwamp\":{\r\n                            tile = (tileNames.littleSwamp);\r\n                            break;\r\n                        }\r\n                        case \"LittlePillbox\":{\r\n                            targetCount+=1;\r\n                            tile = (tileNames._1hp);\r\n                            break;\r\n                        }\r\n                        case \"MediumPillbox\":{\r\n                            targetCount+=1;\r\n                            tile = (tileNames._2hp);\r\n                            break;\r\n                        }\r\n                        case \"BigPillbox\":{\r\n                            targetCount+=1;\r\n                            tile = (tileNames._3hp);\r\n                            break;\r\n                        }\r\n                    }\r\n                    map[Y][X].push({ XShift: XShift, YShift: YShift, tile: tile});\r\n                }\r\n                return {...state,\r\n                        shellDistance: shellDistance,\r\n                        tank: tank,\r\n                        mapWidth: width,\r\n                        mapHeight: height,\r\n                        map: map,\r\n                        mapTracers:[],\r\n                        initialMap: text,\r\n                        targetCount: targetCount\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert('Ошибка файл карты неправильно сформирован');\r\n            }\r\n            break;\r\n        }\r\n        case actionsMap.ZOOM:{\r\n            let {tileSize} = state;\r\n            tileSize += action.payload;\r\n            if (tileSize < 20)\r\n                {tileSize = 20;}\r\n            if (tileSize > 80)\r\n                {tileSize = 80;}\r\n            return {...state, tileSize: tileSize};\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const putStateToProps_Map = (state) =>{\r\n    return {\r\n        shellDistance: state.mapState.shellDistance,\r\n        tank: state.mapState.tank,\r\n        mapWidth: state.mapState.mapWidth,\r\n        mapHeight: state.mapState.mapHeight,\r\n        map: state.mapState.map,\r\n        mapTracers: state.mapState.mapTracers,\r\n        tileSize: state.mapState.tileSize,\r\n    }\r\n};\r\nexport const putActionsToProps_Map = (dispatch) => {\r\n    return {\r\n        reduceHP: bindActionCreators(reduceHP, dispatch),\r\n        loadMap: bindActionCreators(loadMap, dispatch),\r\n        zoomIn: bindActionCreators(zoomIn, dispatch),\r\n        zoomOut: bindActionCreators(zoomOut, dispatch)\r\n    }\r\n};\r\n\r\n//-----------------------------------------------------------\r\n\r\nconst getPointByDirection = (direction) =>{\r\n    let nextPoint= [0,0];\r\n    switch (getDirectionByAngle(direction)) {\r\n        case gameButtons.driver.North:\r\n            nextPoint = [0, -1];\r\n            break;\r\n        case gameButtons.driver.NorthEast:\r\n            nextPoint = [1, -1];\r\n            break;\r\n        case gameButtons.driver.East:\r\n            nextPoint = [1, 0];\r\n            break;\r\n        case gameButtons.driver.SouthEast:\r\n            nextPoint = [1, 1];\r\n            break;\r\n        case gameButtons.driver.South:\r\n            nextPoint = [0, 1];\r\n            break;\r\n        case gameButtons.driver.SouthWest:\r\n            nextPoint = [-1, 1];\r\n            break;\r\n        case gameButtons.driver.West:\r\n            nextPoint = [-1, 0];\r\n            break;\r\n        case gameButtons.driver.NorthWest:\r\n            nextPoint = [-1, -1];\r\n            break;\r\n    }\r\n    return nextPoint;\r\n}\r\n\r\nexport const map_codeReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case actionsMap_Code.SELECT_ROW:\r\n        {\r\n            return {...state, codeState:{...state.codeState, selectedRow: action.payload }}\r\n        }\r\n        case actionsMap_Code.RUN_ROW:\r\n        {\r\n            return state;\r\n        }\r\n        case actionsMap_Code.ROTATE_TURRET:\r\n        {\r\n            const newAngle = transformAngle(getAngleByDirection(action.payload)\r\n                                + state.mapState.tank.TurretDirection);\r\n            if (state.mapState.tank)\r\n                return {...state, mapState:{...state.mapState,\r\n                        tank: {...state.mapState.tank,\r\n                            TurretDirection: newAngle }}};\r\n        }\r\n        case actionsMap_Code.ROTATE_TANK:\r\n        {\r\n            const newAngleBody = transformAngle(getAngleByDirection(action.payload)\r\n                                    + state.mapState.tank.TankDirection);\r\n            const newAngleTurret = transformAngle(getAngleByDirection(action.payload)\r\n                                    + state.mapState.tank.TurretDirection);\r\n            if (state.mapState.tank)\r\n                return {...state, mapState:{...state.mapState,\r\n                        tank: {...state.mapState.tank,\r\n                            TankDirection: newAngleBody,\r\n                            TurretDirection: newAngleTurret}}};\r\n        }\r\n        case actionsMap_Code.MOVE_TANK:\r\n        {\r\n            const {tank} = state.mapState;\r\n\r\n            if (tank) {\r\n                let nextPoint = getPointByDirection(tank.TankDirection);\r\n\r\n                if (!action.payload) {\r\n                    nextPoint[0] = nextPoint[0] * -1;\r\n                    nextPoint[1] = nextPoint[1] * -1;\r\n                }\r\n\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            X: tank.X + nextPoint[0], Y: tank.Y + nextPoint[1]\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.MOVE_TANK_ROTATE_AND_FORWARD:\r\n        {\r\n            const {tank} = state.mapState;\r\n\r\n            if (tank) {\r\n\r\n                const newAngleBody = transformAngle( tank.TankDirection + (action.payload? -45 : 45 ));\r\n                const newAngleTurret = transformAngle( tank.TurretDirection + (action.payload? -45 : 45 ));\r\n\r\n                let nextPoint = getPointByDirection(newAngleBody);\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            X: tank.X + nextPoint[0], Y: tank.Y +  nextPoint[1],\r\n                            TankDirection: newAngleBody, TurretDirection: newAngleTurret\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.LOAD:\r\n        {\r\n            if (state.mapState.tank) {\r\n                let status = state.mapState.tank.TurretStatus + 1;\r\n                if (status === 3){\r\n                    status = 0;\r\n                }\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState,\r\n                        tank: {\r\n                            ...state.mapState.tank,\r\n                            TurretStatus: status\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.START:\r\n        {\r\n            return {\r\n                ...state, codeState: {\r\n                    ...state.codeState, isPlay: true, currentRow:0\r\n                }, mapState: { ...state.mapState, ...mapReducer(state.mapState, Restart()) }\r\n            };\r\n        }\r\n        case actionsMap_Code.STOP:\r\n        {\r\n            if(state.mapState.targetCount <= 0)\r\n                alert(`Все цели уничтожены. ПОздравляю!!\\nБыло задействовано ${state.codeState.rows.length-1} строк`);\r\n            else\r\n                alert('Не все цели уничтожены :((');\r\n\r\n            return {\r\n                ...state, codeState: {\r\n                    ...state.codeState, isPlay: false\r\n                }\r\n            };\r\n        }\r\n        case actionsMap_Code.NEXT_MOVE:\r\n        {\r\n            if (state.codeState.isPlay) {\r\n                const index = state.codeState.currentRow + 1;\r\n                return {\r\n                    ...state, codeState: {\r\n                        ...state.codeState, currentRow: index\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        case actionsMap_Code.FIRE:\r\n        {\r\n            if (state.mapState.tank) {\r\n                console.log(`FIRE from ${state.mapState.tank.X}-${state.mapState.tank.Y}`);\r\n\r\n                const {map, tank, shellDistance} = state.mapState;\r\n                const {X, Y} = tank;\r\n\r\n                let newX = X;\r\n                let newY = Y;\r\n\r\n                const point = getPointByDirection(tank.TurretDirection);\r\n\r\n                for (let i= 0;  i < shellDistance; i++){\r\n                    newX += point[0];\r\n                    newY += point[1];\r\n\r\n                    if (newX >= state.mapState.mapWidth\r\n                        || newX < 0\r\n                        || newY >= state.mapState.mapHeight\r\n                        || newY < 0)\r\n                        break;\r\n\r\n                    state.mapState.mapTracers.push(\r\n                        {\r\n                            tag: point[0] * point[1] === 0? tileNames.trailVert: tileNames.trailDiag,\r\n                            X: newX,\r\n                            Y: newY,\r\n                            inverted: point[1] === 0 || point[0] * point[1] > 0,\r\n                        }\r\n                    );\r\n\r\n                    if (map[newY][newX].length > 0 ){\r\n                        const tag = map[newY][newX][0].tile;\r\n                        if (tag === tileNames.mountains){\r\n                            break;\r\n                        }\r\n                        if (tag === tileNames._3hp\r\n                            || tag === tileNames._2hp\r\n                            || tag === tileNames._1hp){\r\n                            state = {...state, mapState:{...state.mapState,\r\n                                                        ...mapReducer(state.mapState,reduceHP(newX, newY))}};\r\n                            break;\r\n                        }\r\n                        else{\r\n                            let offsetX = point[0] * -1;\r\n                            let offsetY = point[1] * -1;\r\n\r\n                            for (let j =0; j < 3; j++ ){\r\n                                let k = 0;\r\n                                for (k=0; k < map[newY][newX].length; k++ ){\r\n                                    const obj = map[newY][newX][k];\r\n                                    if (offsetX === obj.XShift\r\n                                        && offsetY === obj.YShift\r\n                                        && obj.tile === tileNames.littleMountains){\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (k !== map[newY][newX].length){\r\n                                    break;\r\n                                }\r\n                                offsetX += point[0];\r\n                                offsetY += point[1];\r\n                                state.mapState.mapTracers.push(\r\n                                    {\r\n                                        tag: point[0] * point[1] === 0? tileNames.littleTrailVert\r\n                                                                        : tileNames.littleTrailDiag,\r\n                                        X: newX,\r\n                                        Y: newY,\r\n                                        XShift: offsetX,\r\n                                        YShift: offsetY,\r\n                                        inverted: point[1] === 0 || point[0] * point[1] > 0,\r\n                                    }\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    ...state, mapState: {\r\n                        ...state.mapState, tank: {\r\n                            ...state.mapState.tank,\r\n                            TurretStatus: 0\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport const putStateToProps_AlgButtons = (state) =>{\r\n\r\n    return {\r\n        selectedRow: state.codeState.selectedRow,\r\n        currentRow: state.codeState.currentRow,\r\n        rows: state.codeState.rows,\r\n        shellDistance: state.mapState.shellDistance,\r\n        tank: state.mapState.tank,\r\n        mapWidth: state.mapState.width,\r\n        mapHeight: state.mapState.height,\r\n        map: state.mapState.map,\r\n        isPlay: state.codeState.isPlay,\r\n    }\r\n};\r\nexport const putActionsToProps_AlgButtons = (dispatch) => {\r\n    return {\r\n        rotateTurret: bindActionCreators(RotateTurret, dispatch),\r\n        rotateTank: bindActionCreators(RotateTank, dispatch),\r\n        moveTankForward: bindActionCreators(MoveTankForward, dispatch),\r\n        moveTankBackward: bindActionCreators(MoveTankBackward, dispatch),\r\n        moveTankRotateLeftAndForward: bindActionCreators(MoveTankRotateLeftAndForward, dispatch),\r\n        moveTankRotateRightAndForward: bindActionCreators(MoveTankRotateRightAndForward, dispatch),\r\n        load: bindActionCreators(Load, dispatch),\r\n        selectRow: bindActionCreators(SelectRow, dispatch),\r\n        start: bindActionCreators(Start, dispatch),\r\n        stop: bindActionCreators(Stop, dispatch),\r\n        nextMove: bindActionCreators(NextMove, dispatch),\r\n        restart: bindActionCreators(Restart, dispatch),\r\n        fire: bindActionCreators(Fire, dispatch),\r\n    }\r\n};\r\n\r\nexport const putStateToProps_TankInfo = (state) =>{\r\n\r\n    return {\r\n        tank: state.mapState.tank,\r\n    }\r\n};\r\n","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers.js\"\r\n\r\nexport const tileNames = {\r\n    mountains: \"mountains\",\r\n    swamp: \"swamp\",\r\n    littleMountains: \"littleMountains\",\r\n    littleSwamp: \"littleSwamp\",\r\n    trailVert: \"trailVert\",\r\n    trailDiag: \"trailDiag\",\r\n    littleTrailVert: \"littleTrailVert\",\r\n    littleTrailDiag: \"littleTrailDiag\",\r\n    tankBody: \"tankBody\",\r\n    tankHead: \"tankHead\",\r\n    _3hp: \"3hp\",\r\n    _2hp: \"2hp\",\r\n    _1hp: \"1hp\",\r\n    empty: \"empty\"\r\n};\r\n\r\nexport const getmapTile = (type, anotherTileSize, little = false) =>{\r\n    if (store + \"\" === \"undefined\")\r\n        return {};\r\n    const tS = anotherTileSize || store.getState().mapState.tileSize; //tileSize\r\n    let obj = {};\r\n    switch (type) {\r\n        case tileNames.mountains:\r\n        case tileNames.littleMountains:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.swamp:\r\n        case tileNames.littleSwamp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 2}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.tankBody:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 3}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.tankHead:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 4}px 0px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._3hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `0px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._2hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames._1hp:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 2}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.trailVert:\r\n            console.log(1);\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 3}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.littleTrailVert:\r\n            little = true;\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 3}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.trailDiag:\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 4}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        case tileNames.littleTrailDiag:\r\n            little = true;\r\n            obj = {\r\n                tag: type,\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: `-${tS * 4}px -${tS}px`,\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n        default:\r\n            obj = {\r\n                tag: \"empty\",\r\n                backgroundImage: \"url('../images/game/gametiles.svg')\",\r\n                backgroundPosition: \"0px 0px\",\r\n                height: tS,\r\n                width: tS,};\r\n            break;\r\n    }\r\n    if (little){\r\n        const positionArr = obj.backgroundPosition.split(' ');\r\n        const X = Number(positionArr[0].slice(0,positionArr[0].length-2)) / 3;\r\n        const Y = Number(positionArr[1].slice(0,positionArr[1].length-2)) / 3;\r\n\r\n        obj = { ...obj,\r\n            backgroundPosition: `${Math.floor(X)}px ${Math.floor(Y)}px`,\r\n            backgroundSize: `${tS * 5 / 3 + 2 }px ${tS * 5 / 3 + 2 }px`,\r\n            height: obj.height / 3, width: obj.width / 3 ,\r\n            border:\"none\", }\r\n    }\r\n    else{\r\n        obj = {...obj, backgroundSize: `${tS * 5}px ${tS * 5}px`,}\r\n    }\r\n\r\n\r\n    return obj;\r\n};\r\n\r\nexport const gunnerBtnsCount =8;\r\nexport const driverBtnsCount =11;\r\nexport const chargerBtnsCount =2;\r\n\r\nexport const gameButtons = {\r\n    gunner:{\r\n        North: \"North\",\r\n        East: \"East\",\r\n        South: \"South\",\r\n        West: \"West\",\r\n        NorthWest: \"NorthWest\",\r\n        NorthEast: \"NorthEast\",\r\n        SouthWest: \"SouthWest\",\r\n        SouthEast: \"SouthEast\",\r\n        Fire: \"Fire\"\r\n    },\r\n    driver:{\r\n        North: \"North\",\r\n        East: \"East\",\r\n        South: \"South\",\r\n        West: \"West\",\r\n        NorthWest: \"NorthWest\",\r\n        NorthEast: \"NorthEast\",\r\n        SouthWest: \"SouthWest\",\r\n        SouthEast: \"SouthEast\",\r\n        MoveForward: \"MoveForward\",\r\n        MoveBackward: \"MoveBackward\",\r\n        TurnLeftAndMoveForward: \"TurnLeftAndMoveForward\",\r\n        TurnRightAndMoveForward: \"TurnRigthAndMoveForward\",\r\n        TurnLeftAndMoveBackward: \"TurnLeftAndMoveBackward\",\r\n        TurnRightAndMoveBackward: \"TurnRigthAndMoveBackward\",\r\n    },\r\n    charger:{\r\n        NotLoaded: 0,\r\n        PartiallyLoaded: 1,\r\n        Ready:2,\r\n    }\r\n};\r\n\r\nexport function getGameButtonImage(className, index) {\r\n    return [\r\n        //-----------------Gunner----------------------\r\n        {\r\n            tag:gameButtons.gunner.NorthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.East,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.SouthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.NorthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.West,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.SouthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.South,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.gunner.Fire,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        //---------------Driver------------\r\n        {\r\n            tag:gameButtons.driver.NorthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.East,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.SouthEast,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -150px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.NorthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"0px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.West,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.SouthWest,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-100px -200px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.South,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-50px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.MoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.MoveBackward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px 0px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.TurnRightAndMoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.driver.TurnLeftAndMoveForward,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px -50px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        //-----------------Charger--------------\r\n        {\r\n            tag:gameButtons.charger.PartiallyLoaded,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-150px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n        {\r\n            tag:gameButtons.charger.Ready,\r\n            backgroundImage: \"url('../images/game/actionbtns.svg')\",\r\n            backgroundPosition: \"-200px -100px\",\r\n            left: 0,\r\n            height: 50,\r\n            width: 50,},\r\n    ][index + (className === \"driver\" ? gunnerBtnsCount : 0) + ( className === \"charger\" ? gunnerBtnsCount + driverBtnsCount : 0 )]\r\n}\r\n\r\nexport function getAngleByDirection(direction){\r\n    switch (direction) {\r\n        case \"North\":\r\n            return 0;\r\n        case \"East\":\r\n            return 90;\r\n        case \"South\":\r\n            return 180;\r\n        case \"West\":\r\n            return -90;\r\n        case \"NorthWest\":\r\n            return -45;\r\n        case \"NorthEast\":\r\n            return 45;\r\n        case \"SouthWest\":\r\n            return -135;\r\n        case \"SouthEast\":\r\n            return 135;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function transformAngle(angle) {\r\n    if (angle > 180 )\r\n        return angle - 360;\r\n\r\n    if (angle < -180 )\r\n        return angle + 360;\r\n\r\n    if (angle === 180 || angle === -180)\r\n        return 180;\r\n\r\n    return angle;\r\n}\r\n\r\nexport function getDirectionByAngle(angle){\r\n    angle = transformAngle(angle);\r\n\r\n    switch (angle) {\r\n        case 0:\r\n            return gameButtons.gunner.North;\r\n        case 90:\r\n            return gameButtons.gunner.East;\r\n        case 180:\r\n            return gameButtons.gunner.South;\r\n        case -90:\r\n            return gameButtons.gunner.West;\r\n        case -45:\r\n            return gameButtons.gunner.NorthWest;\r\n        case 45:\r\n            return gameButtons.gunner.NorthEast;\r\n        case -135:\r\n            return gameButtons.gunner.SouthWest;\r\n        case 135:\r\n            return gameButtons.gunner.SouthEast;\r\n    }\r\n    return \"undefined\";\r\n}\r\n\r\nexport const initialState_Code ={\r\n    gunnerSelectedIndex: 0,\r\n    driverSelectedIndex: 0,\r\n    chargerSelectedIndex: 0,\r\n    selectedRow: 0,\r\n    currentRow: 0,\r\n    rows: [{\r\n        gunner: null,\r\n        driver: null,\r\n        charger: null\r\n    }],\r\n    isPlay: false,\r\n};\r\n\r\nconst testMap=`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<World Height=\"10\" Width=\"10\" ShellDistance=\"8\">\r\n  <Tank X=\"4\" Y=\"4\">\r\n    <TankDirection>North</TankDirection>\r\n    <TurretDirection>North</TurretDirection>\r\n    <TurretStatus>NotLoaded</TurretStatus>\r\n  </Tank>\r\n  <Units>\r\n    <LittlePillbox X=\"4\" Y=\"2\" />\r\n    <BigPillbox X=\"7\" Y=\"1\" />\r\n    <Rock X=\"5\" Y=\"2\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleRock X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleRock X=\"7\" Y=\"2\" XShift=\"0\" YShift=\"1\" />\r\n    <Swamp X=\"3\" Y=\"3\" />\r\n    <Swamp X=\"4\" Y=\"3\" />\r\n    <Swamp X=\"5\" Y=\"3\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"2\" XShift=\"0\" YShift=\"1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"2\" XShift=\"1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"0\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"0\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"-1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"6\" Y=\"3\" XShift=\"1\" YShift=\"0\" />\r\n    <LittleSwamp X=\"7\" Y=\"3\" XShift=\"-1\" YShift=\"-1\" />\r\n    <LittleSwamp X=\"7\" Y=\"3\" XShift=\"0\" YShift=\"-1\" />\r\n  </Units>\r\n</World>`;\r\n\r\n\r\nconst intitalTileSize = 40;\r\n\r\nexport const initialState_Map = {\r\n    tileSize:intitalTileSize,\r\n    initialMap: testMap,\r\n    mapTracers: [],\r\n    map:[],\r\n    targetCount:0\r\n};\r\n\r\nexport const initialState = {\r\n    codeState: initialState_Code,\r\n    mapState: initialState_Map\r\n};\r\n\r\nexport const store = createStore(rootReducer, initialState);\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {store} from '../store/stores.js'\r\nimport {getGameButtonImage} from '../store/stores.js'\r\nimport {gunnerBtnsCount, driverBtnsCount, chargerBtnsCount, gameButtons,\r\n    getAngleByDirection, getDirectionByAngle, transformAngle} from '../store/stores.js'\r\nimport {putActionsToProps_Code, putStateToProps_Code} from \"../store/reducers.js\";\r\nimport {putStateToProps_AlgButtons, putActionsToProps_AlgButtons, putStateToProps_TankInfo} from \"../store/reducers.js\";\r\nimport {getmapTile, tileNames} from \"../store/stores\";\r\n\r\nconst error = {\r\n    cannotChangeDirection: 'Невозможно изменить направление во время движения, необходимо остановить танк (сделать паузу)',\r\n    outOfBounds: 'Танк выехал за границу',\r\n    moveOnMountain: 'Танк не может проехать по горам',\r\n    moveOnSwamp: 'Танк не может проехать по лесам',\r\n    moveOnTarget: 'Танк не может проехать по мишеням',\r\n    moveOnSmth: 'Танк не может проехать по этой клетке',\r\n    cannotPartiallyLoad: 'Команду \"Заряжай 1\" можно выполнить только если орудие не заряжено',\r\n    cannotFullyLoad: 'Команду \"Заряжай 2\" можно выполнить только если уже выполнена команда \"Заряжай 1\"',\r\n    cannotFire: 'Нельзя выстрелить, пока орудие не полностью заряжено',\r\n};\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"menuDiv\" className=\"flex-column flex-align-end\" >\r\n                <Provider store={store}>\r\n                    <WrappedMenuButtons />\r\n                </Provider>\r\n                <MenuGame />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MenuButtons extends Component {\r\n    handlePlay(isStart = false){\r\n        if (this.props.isPlay) {\r\n            if (this.nextMove(this.props.currentRow)) {\r\n                this.props.nextMove();\r\n                setTimeout(()=> {\r\n                    if (this.props.isPlay)\r\n                        this.handlePlay();\r\n                },500);\r\n            } else\r\n                {\r\n                    console.log('stop');\r\n                    this.props.stop();}\r\n        }\r\n        else {\r\n            this.props.stop();\r\n        }\r\n    }\r\n\r\n    nextMove(indexRow){\r\n        // const state = store.getState();\r\n        const {tank, map, mapWidth, mapHeight} = this.props;//state.mapState;\r\n        const {rows} = this.props;//state.codeState;\r\n        const currRowIndex = indexRow;\r\n\r\n        if (currRowIndex >= rows.length - 1)\r\n            return false;\r\n\r\n        const currRow = rows[currRowIndex];\r\n        const {gunner, driver,  charger} = currRow;\r\n\r\n        if (gunner !== null){\r\n            const tag = gunner.tag;\r\n            switch (tag) {\r\n                case gameButtons.gunner.North:\r\n                case gameButtons.gunner.NorthEast:\r\n                case gameButtons.gunner.East:\r\n                case gameButtons.gunner.SouthEast:\r\n                case gameButtons.gunner.South:\r\n                case gameButtons.gunner.SouthWest:\r\n                case gameButtons.gunner.West:\r\n                case gameButtons.gunner.NorthWest:{\r\n                    this.props.rotateTurret(tag);\r\n                    break;\r\n                }\r\n                case gameButtons.gunner.Fire:{\r\n                    /*TODO кнопка стрельбы*/\r\n                    if (tank.TurretStatus !== 2)\r\n                    {\r\n                        alert(error.cannotFire + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                    this.props.fire();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (driver !== null){\r\n            const tag = driver.tag;\r\n            switch (tag) {\r\n                case gameButtons.driver.North:\r\n                case gameButtons.driver.NorthEast:\r\n                case gameButtons.driver.East:\r\n                case gameButtons.driver.SouthEast:\r\n                case gameButtons.driver.South:\r\n                case gameButtons.driver.SouthWest:\r\n                case gameButtons.driver.West:\r\n                case gameButtons.driver.NorthWest:{\r\n                    this.props.rotateTank(tag);\r\n                    break;\r\n                }\r\n\r\n                case gameButtons.driver.MoveForward:\r\n                case gameButtons.driver.MoveBackward:{\r\n                    if (currRowIndex > 0\r\n                        && rows[currRowIndex - 1].driver !== null\r\n                        && (\r\n                        (tag === gameButtons.driver.MoveForward\r\n                            && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveBackward)\r\n                            ||\r\n                        (tag === gameButtons.driver.MoveBackward\r\n                            && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveForward)\r\n                            )){\r\n                        alert(error.cannotChangeDirection + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (tag === gameButtons.driver.MoveForward)\r\n                        this.props.moveTankForward();\r\n                    else this.props.moveTankBackward();\r\n\r\n                    const {X,Y} = this.props.tank;\r\n\r\n                    if (X < 0 || X >= mapWidth\r\n                        || Y < 0 || Y >= mapHeight)\r\n                    {\r\n                        alert(error.outOfBounds + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (map[Y][X].length > 0){\r\n                        let msg = error.moveOnSmth;\r\n                        switch (map[Y][X][0].tile) {\r\n                            case tileNames.swamp:\r\n                                msg = error.moveOnSwamp;\r\n                                break;\r\n                            case tileNames.mountains:\r\n                                msg = error.moveOnMountain;\r\n                                break;\r\n                            case tileNames._3hp:\r\n                            case tileNames._2hp:\r\n                            case tileNames._1hp:\r\n                                msg = error.moveOnTarget;\r\n                                break;\r\n                        }\r\n                        alert(msg + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                case gameButtons.driver.TurnLeftAndMoveForward:\r\n                case gameButtons.driver.TurnRightAndMoveForward:\r\n                {\r\n                    if (currRowIndex > 0\r\n                        && rows[currRowIndex - 1].driver !== null\r\n                        && rows[currRowIndex -1].driver.tag === gameButtons.driver.MoveBackward)\r\n                    {\r\n                        alert(error.cannotChangeDirection + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (tag === gameButtons.driver.TurnLeftAndMoveForward)\r\n                        this.props.moveTankRotateLeftAndForward();\r\n                    else this.props.moveTankRotateRightAndForward();\r\n\r\n                    const {X,Y} = this.props.tank;\r\n\r\n                    if (X < 0 || X >= mapWidth\r\n                        || Y < 0 || Y >= mapHeight)\r\n                    {\r\n                        alert(error.outOfBounds + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n\r\n                    if (map[Y][X].length > 0){\r\n                        let msg = error.moveOnSmth;\r\n                        switch (map[Y][X][0].tile) {\r\n                            case tileNames.swamp:\r\n                                msg = error.moveOnSwamp;\r\n                                break;\r\n                            case tileNames.mountains:\r\n                                msg = error.moveOnMountain;\r\n                                break;\r\n                            case tileNames._3hp:\r\n                            case tileNames._2hp:\r\n                            case tileNames._1hp:\r\n                                msg = error.moveOnTarget;\r\n                                break;\r\n                        }\r\n                        alert(msg + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (charger !== null){\r\n            switch (charger.tag) {\r\n                case gameButtons.charger.PartiallyLoaded:{\r\n                    if (tank.TurretStatus === 1 || (tank.TurretStatus === 2\r\n                                                    && (gunner.tag !== gameButtons.gunner.Fire))){\r\n                        alert(error.cannotPartiallyLoad + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                    break;\r\n                }\r\n                case gameButtons.charger.Ready:{\r\n                    if (tank.TurretStatus >= 2){\r\n                        alert(error.cannotFullyLoad + `\\nОшибка в строке (${indexRow + 1})`);\r\n                        return false;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            this.props.load();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"flex-row margin-5\">\r\n                <div className=\"flex-column flex-justify-start widthAll\">\r\n                    <div className=\"flex-column\">\r\n                        <span>Скорость воспроизведения</span>\r\n                        <div>\r\n                            {/*<input type=\"range\" id=\"speedInput\"*/}\r\n                                   {/*onInput=\"document.getElementById('speedVal').innerText = document.getElementById('speedInput').value\" />*/}\r\n                            {/*<span id=\"speedVal\">50</span>*/}\r\n                        </div>\r\n                        <SpeedRange />\r\n                    </div>\r\n                    <div id=\"moveBtnDiv\" className=\"flex-row\">\r\n                        <div className=\"flex-row\">\r\n                            <MenuButton image=\"images/menu/startbtn.svg\" OnClick={() => {this.props.start();\r\n                                            setTimeout(()=>this.handlePlay(true),500)}} />\r\n                            <MenuButton image=\"images/menu/pausebtn.svg\"  />\r\n                            <MenuButton image=\"images/menu/stopbtn.svg\" OnClick={() =>this.props.stop()} />\r\n                            <MenuButton image=\"images/menu/skipbtn.svg\"  />\r\n                            <MenuButton image=\"images/menu/nextstepbtn.svg\"  />\r\n                        </div>\r\n                        <div style={{width: 50}}> </div>\r\n                        <div className=\"flex-row\">\r\n                            <MenuButton image=\"images/menu/savebtn.svg\" />\r\n                            <MenuButton image=\"images/menu/loadbtn.svg\" />\r\n                        </div>\r\n                        <MenuButton image=\"\" />\r\n                    </div>\r\n                    <div style={{textAlign: 'right'}} >\r\n                        <span>Дальность стрельбы: </span>\r\n                        <span>{this.props.shellDistance}</span>\r\n                    </div>\r\n                    <div id=\"saveBtnDiv\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column flex-justify-evenly\">\r\n                    <InfoButton />\r\n                    <Provider store={store}>\r\n                        <WrappedTankInfo />\r\n                    </Provider>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MenuButton(props) {\r\n    let t = null;\r\n    if (!props.OnClick)\r\n        t = {background:\"red\"};\r\n    return (\r\n\r\n        <button style={t}\r\n            onClick={() => props.OnClick()}\r\n        >\r\n            <img src={props.image} alt=\"\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst WrappedMenuButtons = connect(putStateToProps_AlgButtons, putActionsToProps_AlgButtons)(MenuButtons);\r\n\r\n// =============================================\r\n\r\nclass InfoButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isOpen: false\r\n        }\r\n    }\r\n\r\n    handleClick(){\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button id=\"infoButton\" className=\"flex-row\" onClick={() => this.setState({isOpen: true})}>\r\n                    <span>INFO</span>\r\n                    <img src=\"../images/menu/infobtn.svg\" alt=\"\"/>\r\n                </button>\r\n                <ReactModal isOpen={this.state.isOpen} onRequestClose={() => this.setState({isOpen: false})} >\r\n                    <Info onClick={() => this.handleClick()} />\r\n                </ReactModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction Info(props){\r\n    return(\r\n        <div>\r\n            <button onClick={() => props.onClick()}>Закрыть</button>\r\n            TBD\r\n            {/*TODO информацию*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass TankInfo extends Component {\r\n\r\n    loadTank(){\r\n        const {tank} = this.props;\r\n        if (!tank) return null;\r\n        const valueBody = {...getmapTile(tileNames.tankBody, 100, false),position: \"absolute\",\r\n            zIndex:9998,\r\n            left: 0,\r\n            top: 0,\r\n            transform: `rotate(${tank.TankDirection}deg)`,\r\n        };\r\n        const valueHead = {...getmapTile(tileNames.tankHead, 100,false),position: \"absolute\",\r\n            zIndex:9999,\r\n            left: 0,\r\n            top: 0,\r\n            transform: `rotate(${tank.TurretDirection}deg)`,\r\n        };\r\n        return (\r\n            [<div style={valueBody}></div>,\r\n                <div style={valueHead}></div>\r\n            ])\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div id=\"tankDiv\" style={{position: \"relative\", height:100, width:100}}>\r\n                {this.loadTank()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedTankInfo = connect(putStateToProps_TankInfo)(TankInfo);\r\n\r\nclass SpeedRange extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                50%\r\n                {/*TODO скролл скорости*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nclass MenuGame extends Component {\r\n    render() {\r\n        return (\r\n            <div  className=\"flex-row flex-align-start \">\r\n                <div id=\"commandsDiv\" className=\"overflow overflow-y-visible margin-10\">\r\n                    <Provider store={store}>\r\n                        <WrappedGameTable />\r\n                    </Provider>\r\n                </div>\r\n                <div >\r\n                    <Provider store={store}>\r\n                        <WrappedGameButtonsTable />\r\n                    </Provider>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass GameTable extends Component{\r\n    renderRows(){\r\n        let arr=[];\r\n        const {rows} = this.props;\r\n        for(let i = 0; i < rows.length; i++){\r\n            arr.push(\r\n                <GameTableRow\r\n                    selected ={this.props.selectedRow == i}\r\n                    current = {this.props.currentRow == i}\r\n                    index={i}\r\n                    value={rows[i]}\r\n                    OnRowClick={(o)=>this.props.selectRow(o)}\r\n                    onClickTD_LMB={(className) => this.props.addPictureInTD(className, i)}\r\n                    onClickTD_RMB={(className) => this.props.removePictureInTD(className, i)}\r\n                />\r\n            )\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"commands\">\r\n                <tbody>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Наводчик</th>\r\n                    <th>Водитель</th>\r\n                    <th>Заряжающий</th>\r\n                </tr>\r\n                {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedGameTable = connect(putStateToProps_Code, putActionsToProps_Code)(GameTable);\r\n\r\nclass GameTableRow extends Component{\r\n    render() {\r\n        return (\r\n            <tr className={(this.props.selected ? \"selectedRow\": \"\") + (this.props.current ? \" currentRow\": \"\") } onClick={()=>this.props.OnRowClick(this.props.index)}>\r\n                <td style={{width: 20}} >{this.props.index+1}</td>\r\n                <GameTableCell\r\n                    value={this.props.value.gunner}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"gunner\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"gunner\")}\r\n                />\r\n                <GameTableCell\r\n                    value={this.props.value.driver}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"driver\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"driver\")}\r\n                />\r\n                <GameTableCell\r\n                    value={this.props.value.charger}\r\n                    onClickTD_LMB={() => this.props.onClickTD_LMB(\"charger\")}\r\n                    onClickTD_RMB={() => this.props.onClickTD_RMB(\"charger\")}\r\n                />\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction GameTableCell(props) {\r\n    return (\r\n        <td className=\"gameTD\" onClick={() => props.onClickTD_LMB()} onContextMenu={(e) => {e.preventDefault(); props.onClickTD_RMB()} }>\r\n            <div className=\"flex-column flex-justify-center\">\r\n                <div style={props.value} />\r\n            </div>\r\n        </td>\r\n    );\r\n}\r\n\r\n// ========================================\r\n\r\nclass GameButtonsTable extends Component{\r\n    renderButtons(className) {\r\n        let arr = [];\r\n        const {gunnerSelectedIndex,driverSelectedIndex,chargerSelectedIndex,\r\n                changeSelectedButton} = this.props;\r\n        switch (className) {\r\n            case \"gunner\": {\r\n                for (let i = 0; i < gunnerBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={gunnerSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n            case \"driver\":{\r\n                for (let i = 0; i < driverBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={driverSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n            case \"charger\":{\r\n                for (let i = 0; i < chargerBtnsCount; i++) {\r\n                    arr.push(\r\n                        <GameButton key={`${className} - ${i}`}\r\n                                    index={i} class={className} selected={chargerSelectedIndex === i}\r\n                                    onClick={() => changeSelectedButton(i, className)}/>\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex-row flex-align-start overflow\">\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20}} className=\"padding-5\">Наводчик</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"gunner\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20}} className=\"padding-5\">Водитель</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"driver\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column\">\r\n                    <div style={{height: 20, }} className=\"padding-5\">Заряжающий</div>\r\n                    <div className=\"gameButtonsColumn flex-row flex-wrap\">\r\n                        {this.renderButtons(\"charger\")}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-column\">\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedGameButtonsTable = connect(putStateToProps_Code, putActionsToProps_Code)(GameButtonsTable);\r\n\r\nfunction GameButton(props) {\r\n    return (\r\n        <button className={props.class + (props.selected? \" selected\":\"\") + \" margin-1\"}\r\n                style={getGameButtonImage(props.class, props.index)}\r\n                onClick={props.onClick}/>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React, {Component} from \"react\";\r\nimport { connect, Provider } from 'react-redux'\r\nimport {store} from '../store/stores.js'\r\nimport {putStateToProps_Map, putActionsToProps_Map} from '../store/reducers.js'\r\nimport '../styles/game.css';\r\nimport {tileNames,getmapTile} from \"../store/stores\";\r\n\r\n\r\nclass Map extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"mapDiv\">\r\n                <Provider store={store}>\r\n                    <WrappedMapTable />\r\n                </Provider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MapTable extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        props.loadMap(\"\")\r\n    }\r\n\r\n\r\n    renderTable(){\r\n        const tileSize = this.props.tileSize;\r\n        const {map, mapWidth, mapHeight, reduceHP} = this.props;\r\n        const elements = [];\r\n\r\n        for (let i = 0; i < mapHeight; i++){\r\n            const row =[];\r\n\r\n            for (let j = 0; j < mapWidth; j++){\r\n                if (map[i][j].length > 0\r\n                    && (map[i][j][0].tile === tileNames.littleMountains\r\n                    || map[i][j][0].tile === tileNames.littleSwamp)\r\n                    &&(map[i][j][0].XShift !== null && map[i][j][0].YShift !== null)){\r\n                    let combinedTile =[[null, null, null],[null, null, null],[null, null, null]];\r\n                    for (let k = 0; k < map[i][j].length; k++){\r\n\r\n                        combinedTile[map[i][j][k].YShift + 1][map[i][j][k].XShift + 1] =\r\n                            (<MapTile key={`tile ${i} - ${j}: ${map[i][j][k].YShift + 1} - ${map[i][j][k].XShift + 1}`}\r\n                                      value={getmapTile(map[i][j][k].tile, this.props.tileSize, true)} />)\r\n                    }\r\n                    for (let k = 0; k < 9; k++){\r\n                        if (!combinedTile[Math.floor(k / 3)][k %3]){\r\n                            combinedTile[Math.floor(k / 3)][k % 3]\r\n                                = (<MapTile key={`tile ${i} - ${j}: ${Math.floor(k / 3)} - ${k %3}`}\r\n                                            value={getmapTile(tileNames.empty,this.props.tileSize, true)} />);\r\n                        }\r\n                    }\r\n                    const combinedDiv=[];\r\n                    for (let k = 0; k < 3; k++){\r\n                        const combinedRow = [];\r\n                        for (let t = 0; t < 3; t++){\r\n                            combinedRow.push(combinedTile[k][t])\r\n                        }\r\n                        combinedDiv.push(\r\n                            <div className=\"flex-row\">\r\n                                {combinedRow}\r\n                            </div>);\r\n                    }\r\n                    row.push(\r\n                        <div key={`div ${i} - ${j}`} className=\"mapTile flex-column\" style={{height: tileSize, width: tileSize }}>\r\n                            {combinedDiv}\r\n                        </div>);\r\n                }\r\n                else\r\n                for (let k = 0; k < map[i][j].length; k++){\r\n                    row.push(\r\n                        <MapTile key={`tile ${i} - ${j}`} value={getmapTile( map[i][j][k].tile, this.props.tileSize)} />\r\n                    );\r\n                }\r\n                if (map[i][j].length  === 0){\r\n                    const tile = /*{...*/getmapTile(tileNames.empty, this.props.tileSize,);\r\n                    row.push(\r\n                        <MapTile key={`tile ${i} - ${j}`} value={tile} />\r\n                    );\r\n                }\r\n            }\r\n            elements.push(\r\n                <div className=\"flex-row\">\r\n                    {row}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"flex-column flex-align-start\" style={{position: \"relative\"}} >\r\n                {this.loadTank()}\r\n                {this.loadTrails()}\r\n                {elements}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadTank(){\r\n        const tileSize= this.props.tileSize;\r\n        const {tank} = this.props;\r\n        if (!tank) return null;\r\n        const valueBody = {...getmapTile(tileNames.tankBody, this.props.tileSize),position: \"absolute\",\r\n            zIndex:9998,\r\n            left: tank.X * (tileSize + 2),\r\n            top: tank.Y * (tileSize + 2),\r\n            transform: `rotate(${tank.TankDirection}deg)`\r\n\r\n        };\r\n        const valueHead = {...getmapTile(tileNames.tankHead, this.props.tileSize),position: \"absolute\",\r\n            zIndex:9999,\r\n            left: tank.X * (tileSize + 2),\r\n            top: tank.Y * (tileSize + 2),\r\n            transform: `rotate(${tank.TurretDirection}deg)`\r\n        };\r\n        return (\r\n            [<div style={valueBody}></div>,\r\n             <div style={valueHead}></div>\r\n            ])\r\n    }\r\n    loadTrails(){\r\n        const tileSize= this.props.tileSize;\r\n        const {mapTracers} = this.props;\r\n        if (mapTracers.length === 0) return null;\r\n\r\n        const arr = [];\r\n        const length = mapTracers.length;\r\n\r\n        for (let i = 0; i < length; i++){\r\n            const little = mapTracers[i].tag === tileNames.littleTrailDiag\r\n                            || mapTracers[i].tag === tileNames.littleTrailVert;\r\n            let left = mapTracers[i].X * (tileSize * (little? 3: 1) + 2)\r\n                + (little? (tileSize+2) * mapTracers[i].XShift :0);\r\n            let top = mapTracers[i].Y * (tileSize * (little? 3: 1) + 2)\r\n                + (little? (tileSize+2) * mapTracers[i].XShift :0);\r\n            const value = {...getmapTile(mapTracers[i].tag, this.props.tileSize),position: \"absolute\",\r\n                zIndex:9996,\r\n                left: left,\r\n                top: top,\r\n                transform: `rotate(${mapTracers[i].inverted? 90 : 0 }deg)`\r\n            };\r\n            arr.push(\r\n                <div style={value}></div>\r\n            )\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    fileLoad(evt){\r\n        var files = evt.target.files; // FileList object\r\n        var reader = new FileReader();\r\n        const {loadMap} = this.props;\r\n        reader.onload = function(e) {\r\n            loadMap(e.target.result)\r\n            //console.log(typeof e.target.result)\r\n        };\r\n        reader.readAsText(files[0].slice());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mapCont\" className=\"overflow-visible\" >\r\n                <div style={{positon:\"sticky\", top: 0}}>\r\n                    <div className=\"flex-row\">\r\n                        <input type=\"file\" onChange={(event => this.fileLoad(event))} />\r\n                        <button style={{width:20}} onClick={()=>this.props.zoomIn()}>+</button>\r\n                        <button style={{width:20}} onClick={()=>this.props.zoomOut()}>-</button>\r\n                        <div >{this.props.tileSize} </div>\r\n                    </div>\r\n                </div>\r\n                {this.renderTable()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MapTile(props) {\r\n    const value = {\r\n        backgroundImage: props.value.backgroundImage,\r\n        backgroundPosition:  props.value.backgroundPosition,\r\n        border: props.value.border,\r\n        height: props.value.height,\r\n        width: props.value.width,\r\n        backgroundSize: props.value.backgroundSize,\r\n    };\r\n    return(\r\n        <div className=\"mapTile\" style={value} onClickCapture={()=>props.onClick()}>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WrappedMapTable = connect(putStateToProps_Map, putActionsToProps_Map)(MapTable);\r\n\r\nexport default Map","import React, {Component} from 'react';\nimport Menu from './components/menu.js'\nimport Map from './components/map.js'\nimport ReactDOM from 'react-dom';\nimport './styles/game.css';\nimport './styles/scroll.css';\nimport './images/game/карта.png';\n\n\nclass Game extends Component {\n    render() {\n        return (\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div id=\"snavigator\">Танковый Экипаж</div>\n                <div id=\"gridMain\" >\n                    <Map />\n                    <Menu />\n                </div>\n            </div>\n        )\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}